tf <- merge(tmp.f,maxUtil_day_server,by.x = 'svr_id',by.y = 'svrid')
tcmdb <- merge(tmp.cmdb,maxUtil_day_server,by.x = 'svr_asset_id',by.y = 'svrid')
tfC <- subset(tf,grepl('C',dClass))
tfTS <- subset(tf,grepl('TS',dClass))
tcmdbC <- subset(tcmdb,grepl('C',dClass))
tcmdbTS <- subset(tcmdb,grepl('TS',dClass))
summary(maxUtil_day_server$maxU)
staU0 <- maxUtil_day_server
staU0$dClass <- tcmdb$dClass[match(staU0$svrid,tcmdb$svr_asset_id)]
staU0$dClass[grepl('TS',staU0$dClass)] <- 'Sserv'
staU0$dClass[grepl('C',staU0$dClass)] <- 'Nserv'
staU0$fClass <- 'Normal'
staU0$fClass[staU0$svrid %in% tf$svr_id] <- 'Failed'
staU0$class <- paste(staU0$fClass,staU0$dClass,sep=' ')
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(4,units = 'line'),
legend.key.height = unit(2,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0,1),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
maxUtil_day_server <- data.frame(svrid = levels(ioF$svrid),
maxoU = as.numeric(tapply(ioF$attr,ioF$svrid,max)))
tf <- merge(tmp.f,maxUtil_day_server,by.x = 'svr_id',by.y = 'svrid')
tcmdb <- merge(tmp.cmdb,maxUtil_day_server,by.x = 'svr_asset_id',by.y = 'svrid')
tfC <- subset(tf,grepl('C',dClass))
tfTS <- subset(tf,grepl('TS',dClass))
tcmdbC <- subset(tcmdb,grepl('C',dClass))
tcmdbTS <- subset(tcmdb,grepl('TS',dClass))
staU0 <- maxUtil_day_server
staU0$dClass <- tcmdb$dClass[match(staU0$svrid,tcmdb$svr_asset_id)]
staU0$dClass[grepl('TS',staU0$dClass)] <- 'Sserv'
staU0$dClass[grepl('C',staU0$dClass)] <- 'Nserv'
staU0$fClass <- 'Normal'
staU0$fClass[staU0$svrid %in% tf$svr_id] <- 'Failed'
staU0$class <- paste(staU0$fClass,staU0$dClass,sep=' ')
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(4,units = 'line'),
legend.key.height = unit(2,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0,1),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
source('~/Code/R/Disk_Workload/NewSC16/sc16F6Func.R')
rm(list = ls());setwd('~/Code/R/Disk_Workload/NewSC16/');source('~/rhead')
#@@@ Function @@@#
source('attr_function.R')
source('AFR_io_function.R')
source('sc16F6Func.R')
load(file.path(dir_data,'dataPrepareAFR1406_1407.Rda'))
load(file.path(dir_data,'NewSC16','ioFeature.Rda')) #speed + util + Dense特征
load(file.path(dir_data,'NewSC16','ioUtilMax.Rda')) #100%util持续时间
attr <- 'q100Util'
ioF <- factorX(subset(ioFtr,svrid %in% tmp.cmdb$svr_asset_id,c('svrid',attr)))
names(ioF) <- c('svrid','attr')
DT_ftr <- data.frame(svrid = levels(ioF$svrid),maxoU = as.numeric(tapply(ioF$attr,ioF$svrid,max)))
DT_ftr <- maxUtil_day_server
DT_ftr$dClass <- tcmdb$dClass[match(DT_ftr$svrid,tcmdb$svr_asset_id)]
DT_ftr$dClass[grepl('TS',DT_ftr$dClass)] <- 'Sserv'
DT_ftr$dClass <- tcmdb$dClass[match(DT_ftr$svrid,cmdb$svr_asset_id)]
DT_ftr$dClass <- cmdb$dClass[match(DT_ftr$svrid,cmdb$svr_asset_id)]
DT_ftr$dClass[grepl('TS',DT_ftr$dClass)] <- 'Sserv'
DT_ftr$dClass[grepl('C',DT_ftr$dClass)] <- 'Nserv'
DT_ftr$fClass <- 'Normal'
DT_ftr$fClass[DT_ftr$svrid %in% tmp.f$svr_id] <- 'Failed'
DT_ftr$class <- paste(DT_ftr$fClass,DT_ftr$dClass,sep=' ')
p1 <- plot_feature_CDF(DT_ftr);print(p1)
ioU <- factorX(subset(ioUtilMax,svrid %in% tmp.cmdb$svr_asset_id))
ioU$A1 <- ioU$maxLastCount
ioU$A2 <- ioU$maxCount
meanA1 <- tapply(ioU$A1,ioU$svrid,mean)
maxA1 <- tapply(ioU$A1,ioU$svrid,max)
maxtopA1 <- tapply(ioU$A1,ioU$svrid,function(x){x <- sort(x,decreasing = T);mean(x[1:10])})
divU1 <- c(-1,0,1,2,3,6,12,60,120,288)
staU1 <- data.frame(svrid = names(meanA1),
meanoA1 = as.numeric(meanA1),
maxoA1 = as.numeric(maxA1),
maxtopoA1 = as.numeric(maxtopA1),
meanA1 = cut(as.numeric(meanA1),divU1,include.lowest = T),
maxA1 = cut(as.numeric(maxA1),divU1,include.lowest = T),
maxtopA1 = cut(as.numeric(maxtopA1),divU1,include.lowest = T))
tf <- merge(tmp.f,staU1,by.x = 'svr_id',by.y = 'svrid')
tcmdb <- merge(tmp.cmdb,staU1,by.x = 'svr_asset_id',by.y = 'svrid')
tfC <- subset(tf,grepl('C',dClass));tfTS <- subset(tf,grepl('TS',dClass))
tcmdbC <- subset(tcmdb,grepl('C',dClass)); tcmdbTS <- subset(tcmdb,grepl('TS',dClass))
attrNeed <- 'maxA1'
a <- ioAFR(tcmdbC,tfC,attrNeed)
a$class <- 'Nserv'
b <- ioAFR(tcmdbTS,tfTS,attrNeed,diskCount = 12)
b$class <- 'Sserv'
a$AFR <- a$AFR/2.26*1.48
b$AFR <- b$AFR/1.96*1.61
Dura <- rbind(item_order(a,attrNeed),item_order(b,attrNeed))
Dura$maxA1 <- as.numeric(gsub('\\]$|^.*,','',Dura$maxA1))*5
AFR_plot(Dura,'fig6B',0,30)
head (ioU)
summary(ioU)
a <- subset(ioU,maxCount == 0)
summary(a$maxLastCount)
ioU <- factorX(subset(ioUtilMax,svrid %in% tmp.cmdb$svr_asset_id & maxCount > 0))
ioU <- factorX(subset(ioUtilMax,svrid %in% tmp.cmdb$svr_asset_id & maxCount > 0))
ioU$A1 <- ioU$maxLastCount
ioU$A2 <- ioU$maxCount
meanA1 <- tapply(ioU$A1,ioU$svrid,mean)
maxA1 <- tapply(ioU$A1,ioU$svrid,max)
maxtopA1 <- tapply(ioU$A1,ioU$svrid,function(x){x <- sort(x,decreasing = T);mean(x[1:10])})
ioU <- factorX(subset(ioUtilMax,svrid %in% tmp.cmdb$svr_asset_id & maxCount > 0))
meanMLC <- tapply(ioU$maxLastCount,ioU$svrid,mean)
maxMLC <- tapply(ioU$maxLastCount,ioU$svrid,max)
maxtopMLC <- tapply(ioU$maxLastCount,ioU$svrid,function(x){x <- sort(x,decreasing = T);mean(x[1:10])})
divU1 <- c(-1,0,1,2,3,6,12,60,120,288)
staU1 <- data.frame(svrid = names(meanMLC),
meanoMLC = as.numeric(meanMLC),
maxoMLC = as.numeric(maxMLC),
maxtopoMLC = as.numeric(maxtopMLC),
meanMLC = cut(as.numeric(meanMLC),divU1,include.lowest = T),
maxMLC = cut(as.numeric(maxMLC),divU1,include.lowest = T),
maxtopMLC = cut(as.numeric(maxtopMLC),divU1,include.lowest = T))
tf <- merge(tmp.f,staU1,by.x = 'svr_id',by.y = 'svrid')
tcmdb <- merge(tmp.cmdb,staU1,by.x = 'svr_asset_id',by.y = 'svrid')
View(staU1)
View(tf)
summary(tcmdb$maxMLC)
tf <- tmp.f
tf <- mchAttr(tf,staU1,'svr_id','svrid',c('maxMLC','meanMLC','maxtopMLC'))
tf[,c('maxMLC','meanMLC','maxtopMLC')] <- replace_value(tf[,c('maxMLC','meanMLC','maxtopMLC')])
View(tf)
staU1 <- data.frame(svrid = names(meanMLC),
meanoMLC = as.numeric(meanMLC),
maxoMLC = as.numeric(maxMLC),
maxtopoMLC = as.numeric(maxtopMLC),
meanMLC = as.numeric(cut(as.numeric(meanMLC),divU1,divU1[-1],include.lowest = T)),
maxMLC = as.numeric(cut(as.numeric(maxMLC),divU1,divU1[-1],include.lowest = T)),
maxtopMLC = as.numeric(cut(as.numeric(maxtopMLC),divU1,divU1[-1],include.lowest = T)))
tf <- tmp.f
tf <- mchAttr(tf,staU1,'svr_id','svrid',c('maxMLC','meanMLC','maxtopMLC'))
tf[,c('maxMLC','meanMLC','maxtopMLC')] <- replace_value(tf[,c('maxMLC','meanMLC','maxtopMLC')])
tf <- tmp.f
tf <- mchAttr(tf,staU1,'svr_id','svrid',c('maxMLC','meanMLC','maxtopMLC'))
tf[,c('maxMLC','meanMLC','maxtopMLC')] <- replace_value(tf[,c('maxMLC','meanMLC','maxtopMLC')])
tcmdb <- tmp.cmdb
tcmdb <- tmp.cmdb
tcmdb <- mchAttr(tcmdb,staU1,'svr_id','svrid',c('maxMLC','meanMLC','maxtopMLC'))
function (x, i, j, value)
tcmdb <- tmp.cmdb
tcmdb <- mchAttr(tcmdb,staU1,'svr_asset_id','svrid',c('maxMLC','meanMLC','maxtopMLC'))
tcmdb[,c('maxMLC','meanMLC','maxtopMLC')] <- replace_value(tcmdb[,c('maxMLC','meanMLC','maxtopMLC')])
attrNeed <- 'maxMLC'
pC <- ioAFR(tcmdbC,tfC,attrNeed)
function (x, i, j, drop = if (missing(i)) TRUE else length(cols) ==
1)
tf <- tmp.f
tf <- mchAttr(tf,staU1,'svr_id','svrid',c('maxMLC','meanMLC','maxtopMLC'))
tf[,c('maxMLC','meanMLC','maxtopMLC')] <- replace_value(tf[,c('maxMLC','meanMLC','maxtopMLC')])
tcmdb <- tmp.cmdb
tcmdb <- mchAttr(tcmdb,staU1,'svr_asset_id','svrid',c('maxMLC','meanMLC','maxtopMLC'))
tcmdb[,c('maxMLC','meanMLC','maxtopMLC')] <- replace_value(tcmdb[,c('maxMLC','meanMLC','maxtopMLC')])
# group
tfC <- subset(tf,grepl('C',dClass))
tfTS <- subset(tf,grepl('TS',dClass))
tcmdbC <- subset(tcmdb,grepl('C',dClass))
tcmdbTS <- subset(tcmdb,grepl('TS',dClass))
attrNeed <- 'maxMLC'
pC <- ioAFR(tcmdbC,tfC,attrNeed)
pC$class <- 'Nserv'
pTS <- ioAFR(tcmdbTS,tfTS,attrNeed,diskCount = 12)
pTS$class <- 'Sserv'
pC$AFR <- pC$AFR/2.26*1.48
pTS$AFR <- pTS$AFR/1.96*1.61
Dura <- rbind(item_order(pC,attrNeed),item_order(pTS,attrNeed))
Dura[[attrNeed]] <- Dura[[attrNeed]]*5
View(Dura)
Dura <- rbind(item_order(pC,attrNeed),item_order(pTS,attrNeed))
View(Dura)
Dura[[attrNeed]] <- fct2ori(Dura[[attrNeed]])*5
fct2ori(Dura[[attrNeed]])
Dura[[attrNeed]] <- fct2num(Dura[[attrNeed]])*5
AFR_plot(Dura,'fig6B',0,30)
View(Dura)
AFR_plot(Dura,'fig6B',0,30)
cm <- Dura
title <- 'fig6B'
ylimL <- 0
ylimR <- 30
cm1 <- cm
p1 <- ggplot(cm1,aes(x = factor(maxA1),y = AFR,fill = class)) +
geom_bar(stat = 'identity',position = 'dodge') +
xlab('Duration of full workload (minutes)') + ylab('Annual Failure Rate (%)') +
scale_y_continuous(limits = c(ylimL,ylimR),oob = rescale_none,breaks = seq(ylimL,ylimR,5)) +
# scale_x_continuous(breaks = floor(min(cm1$maxCVd)):ceiling(max(cm1$maxCVd))) +
# scale_y_continuous(breaks = seq(0,8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
source('~/Code/R/Disk_Workload/NewSC16/sc16F6Func.R')
as.name('sss')
source('~/Code/R/Disk_Workload/NewSC16/sc16F6Func.R')
AFR_plot(Dura,title = 'fig6B',ylimL = 0,ylimR = 30,para_x = attrNeed,para_y = 'AFR',para_fill = 'class')
source('~/Code/R/Disk_Workload/NewSC16/sc16F6Func.R')
AFR_plot(Dura,title = 'fig6B',ylimL = 0,ylimR = 30,para_x = attrNeed,para_y = 'AFR',para_fill = 'class')
source('~/Code/R/Disk_Workload/NewSC16/sc16F6Func.R')
source('~/Code/R/Disk_Workload/NewSC16/sc16F6Func.R')
AFR_plot(Dura,title = 'fig6B',ylimL = 0,ylimR = 30,para_x = attrNeed,para_y = 'AFR',para_fill = 'class')
cm = Dura;title = 'fig6B';ylimL = 0;ylimR = 30;para_x = attrNeed;para_y = 'AFR';para_fill = 'class'
cm1 <- cm
p1 <- ggplot(cm1,aes(x = as.name(para_x),y = as.name(para_y),fill = as.name(para_fill))) +
geom_bar(stat = 'identity',position = 'dodge') +
xlab('Duration of full workload (minutes)') + ylab('Annual Failure Rate (%)') +
scale_y_continuous(limits = c(ylimL,ylimR),oob = rescale_none,breaks = seq(ylimL,ylimR,5)) +
# scale_x_continuous(breaks = floor(min(cm1$maxCVd)):ceiling(max(cm1$maxCVd))) +
# scale_y_continuous(breaks = seq(0,8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
View(cm)
para_x
ggplot(cm1,aes(x = as.name(para_x),y = as.name(para_y),fill = as.name(para_fill)))
ggplot(cm1,aes(x = maxMLC,y = AFR,fill = class)) +
geom_bar(stat = 'identity',position = 'dodge')
ggplot(cm1,aes(x = as.name(para_x),y = AFR,fill = class)) +
geom_bar(stat = 'identity',position = 'dodge')
ggplot(cm1,aes_q(x = as.name(para_x),y = AFR,fill = class)) +
geom_bar(stat = 'identity',position = 'dodge')
?aes
ggplot(cm1,aes_string(x = para_x,y = para_y,fill = para_fill)) +
geom_bar(stat = 'identity',position = 'dodge')
AFR_plot(cm = Dura,title = 'fig6B',ylimL = 0,ylimR = 30,para_x = attrNeed,para_y = 'AFR',para_fill = 'class')
p1 <- ggplot(cm1,aes_string(x = para_x,y = para_y,fill = para_fill)) +
geom_bar(stat = 'identity',position = 'dodge') +
xlab('Duration of full workload (minutes)') + ylab('Annual Failure Rate (%)') +
scale_y_continuous(limits = c(ylimL,ylimR),oob = rescale_none,breaks = seq(ylimL,ylimR,5)) +
# scale_x_continuous(breaks = floor(min(cm1$maxCVd)):ceiling(max(cm1$maxCVd))) +
# scale_y_continuous(breaks = seq(0,8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
source('~/Code/R/Disk_Workload/NewSC16/sc16F6Func.R')
AFR_plot(cm = Dura,title = 'fig6B',ylimL = 0,ylimR = 30,para_x = attrNeed,para_y = 'AFR',para_fill = 'class')
rm(list = ls());setwd('~/Code/R/Disk_Workload/NewSC16/');source('~/rhead')
source('~/Code/R/Disk_Workload/NewSC16/sc16F6.R')
source('~/Code/R/Disk_Workload/NewSC16/base_func.R')
AFR_plot(cm = Dura,title = 'fig6B',
ylimL = 0,ylimR = 30,
para_x = attrNeed,para_y = 'AFR',para_fill = 'class',
para_xlab = 'Duration of full workload (minutes)',
para_ylab = 'Annual Failure Rate (%)')
AFR_plot(DT = Dura,title = 'fig6B',
ylimL = 0,ylimR = 30,
para_x = attrNeed,para_y = 'AFR',para_fill = 'class',
para_xlab = 'Duration of full workload (minutes)',
para_ylab = 'Annual Failure Rate (%)')
source('~/Code/R/Disk_Workload/NewSC16/base_func.R')
AFR_plot(DT = Dura,title = 'fig6B',
ylimL = 0,ylimR = 30,
para_x = attrNeed,para_y = 'AFR',para_fill = 'class',
para_xlab = 'Duration of full workload (minutes)',
para_ylab = 'Annual Failure Rate (%)')
rm(list = ls());setwd('~/Code/R/Disk_Workload/NewSC16/');source('~/rhead')
load(file.path(dir_data,'dataPrepareAFR1406_1407.Rda'))
load(file.path(dir_data,'NewSC16','feature_strength_of_periodicity.Rda'))
divCV <- c(0,0.02,0.04,0.06,0.08,0.1,0.2,0.4,0.6,0.8,1.0,Inf)
ioDuraCV <- data.frame(svrid = dura999$svrid)
ioDuraCV$cvD999 <- dura999$cv[match(ioDuraCV$svrid,dura999$svrid)]
ioDuraCV$cut999 <- cut(ioDuraCV$cvD999,divCV,include.lowest = T)
ioDuraCV$cvD9023 <- dura9023$cv[match(ioDuraCV$svrid,dura9023$svrid)]
ioDuraCV$cut9023 <- cut(ioDuraCV$cvD9023,divCV,include.lowest = T)
ioDuraCV <- factorX(subset(ioDuraCV,!is.na(cut999) & !is.na(cut9023)))
f <- merge(tmp.f,ioDuraCV,by.x = 'svr_id',by.y = 'svrid')
io <- merge(tmp.cmdb,ioDuraCV,by.x = 'svr_asset_id',by.y = 'svrid')
AFR_cvD999C <- item_order(AFR_attr_notime(f,io,'cut999',1,dev = 'C'))
AFR_cvD999TS <- item_order(AFR_attr_notime(f,io,'cut999',12,dev = 'TS'))
AFR_cvD999 <- classExchg(rbind(AFR_cvD999C,AFR_cvD999TS))
AFR_cvD999$itemN <- as.numeric(gsub('^\\[|^\\(|,.*$','',AFR_cvD999$item))
AFR_plot(DT = AFR_cvD999,title = 'fig5B',
ylimL = 0,ylimR = 0.6,
para_x = 'itemN',para_y = 'AFR',para_fill = 'class',
para_xlab = 'CV of difference',para_ylab = 'Annual Failure Rate (%)')
source('~/Code/R/Disk_Workload/NewSC16/base_func.R')
AFR_plot(DT = AFR_cvD999,title = 'fig5B',
ylimL = 0,ylimR = 0.6,
para_x = 'itemN',para_y = 'AFR',para_fill = 'class',
para_xlab = 'CV of difference',para_ylab = 'Annual Failure Rate (%)')
View(AFR_cvD999)
AFR_cvD999$itemN <- gsub('^\\[|^\\(|,.*$','',AFR_cvD999$item)
AFR_plot(DT = AFR_cvD999,title = 'fig5B',
ylimL = 0,ylimR = 0.6,
para_x = 'itemN',para_y = 'AFR',para_fill = 'class',
para_xlab = 'CV of difference',para_ylab = 'Annual Failure Rate (%)')
source('~/Code/R/Disk_Workload/NewSC16/base_func.R')
AFR_plot(DT = AFR_cvD999,title = 'fig5B',
ylimL = 0,ylimR = 0.6,
para_x = 'itemN',para_y = 'AFR',para_fill = 'class',
para_xlab = 'CV of difference',para_ylab = 'Annual Failure Rate (%)')
AFR_cvD9023C <- item_order(AFR_attr_notime(f,io,'cut9023',1,dev = 'C'))
AFR_cvD9023TS <- item_order(AFR_attr_notime(f,io,'cut9023',12,dev = 'TS'))
AFR_cvD9023 <- classExchg(rbind(AFR_cvD9023C,AFR_cvD9023TS))
AFR_cvD9023$itemN <- gsub('^\\[|^\\(|,.*$','',AFR_cvD9023$item)
AFR_cvD9023C <- item_order(AFR_attr_notime(f,io,'cut9023',1,dev = 'C'))
AFR_cvD9023TS <- item_order(AFR_attr_notime(f,io,'cut9023',12,dev = 'TS'))
AFR_cvD9023 <- classExchg(rbind(AFR_cvD9023C,AFR_cvD9023TS))
AFR_cvD9023$itemN <- gsub('^\\[|^\\(|,.*$','',AFR_cvD9023$item)
AFR_plot(DT = AFR_cvD9023N,title = 'fig5A',
ylimL = 0,ylimR = 0.6,
para_x = 'itemN',para_y = 'AFR',para_fill = 'class',
para_xlab = 'CV of difference',para_ylab = 'Annual Failure Rate (%)')
AFR_plot(DT = AFR_cvD9023,title = 'fig5A',
ylimL = 0,ylimR = 0.6,
para_x = 'itemN',para_y = 'AFR',para_fill = 'class',
para_xlab = 'CV of difference',para_ylab = 'Annual Failure Rate (%)')
source('~/Code/R/Disk_Workload/NewSC16/sc16F5.R')
rm(list = ls());setwd('~/Code/R/Disk_Workload/NewSC16/');source('~/rhead')
load(file.path(dir_data,'dataPrepareAFR1406_1407.Rda'))
load(file.path(dir_data,'NewSC16','ioFluc9023Simp.Rda'))
cmdbio <- tmp.io #new line
cmdbio$dClassN <- 'Sserv'
cmdbio$dClassN[grepl('C',cmdbio$dClass)] <- 'Nserv'
cmdbio$warP <- 'Under warranty'
cmdbio$warP[cmdbio$shTime >= 3] <- 'Warranty expired'
# S2. For f
f <- tmp.f
f <- mchAttr(f,cmdbio,'svr_id','svrid',c('dClassN','warP'))
ioFluc <- ioFluc9023
ioFluc$cv9023[is.na(ioFluc$cv9023)] <- 0
ioFluc$cv9023 <- abs(ioFluc$cv902)
ioFluc <- subset(ioFluc,svrid %in% cmdbio$svrid)
ioFluc <-factorX(ioFluc)
# S3. Statistic of vibration
meCV <- tapply(ioFluc$cv9023,ioFluc$svrid,mean)
maxCV <- tapply(ioFluc$cv9023,ioFluc$svrid,max)
topmaxCV <- tapply(ioFluc$cv9023,ioFluc$svrid,function(x){
x <- sort(x,decreasing = T)
mean(x[1:10])
})
disp <- data.frame(svrid = names(meCV),
meanCV = as.numeric(meCV),
maxCV = as.numeric(maxCV),
topmaxCV = as.numeric(topmaxCV))
divCV <- c(seq(0,5,0.5),max(disp$maxCV,na.rm = T))
disp$maxCVd <- fct2num(cut(disp$maxCV,divCV,divCV[-1],include.lowest = T))
# S5. get attributes from disp
io <- mchAttr(cmdbio,disp,'svrid','svrid',c('meanCV','maxCV','topmaxCV','maxCVd'))
f <- mchAttr(f,disp,'svr_id','svrid',c('meanCV','maxCV','topmaxCV','maxCVd'))
io$classA <- paste(io$dClassN,'(',io$warP,')',sep='')
# S6. group
ioC <- subset(io,dClassN == 'Nserv')
ioTS <- subset(io,dClassN == 'Sserv')
fC <- subset(f,dClassN == 'Nserv')
fTS <- subset(f,dClassN == 'Sserv')
AFRflucTS <- ioAFR(ioTS,fTS,c('maxCVd'),12)
AFRflucC <- ioAFR(ioC,fC,c('maxCVd'))
AFRflucC$class <- 'Nserv'
AFRflucTS$class <- 'Sserv'
AFR_plot(DT = AFR_cvD9023,title = 'fig5A',ylimL = 0,ylimR = 0.6,
para_x = 'itemN',para_y = 'AFR',para_fill = 'class',
para_xlab = 'Coefficient of Variable',para_ylab = 'Annual Failure Rate (%)')
AFR_plot(DT = rbind(AFRflucC,AFRflucTS),title = 'fig4D',ylimL = 0,ylimR = 6,
para_x = 'maxCVd',para_y = 'AFR',para_fill = 'class',
para_xlab = 'Coefficient of Variable',para_ylab = 'Annual Failure Rate (%)')
DT = rbind(AFRflucC,AFRflucTS);title = 'fig4D';ylimL = 0;ylimR = 6,
para_x = 'maxCVd';para_y = 'AFR';para_fill = 'class';
para_xlab = 'Coefficient of Variable';para_ylab = 'Annual Failure Rate (%)'
DT = rbind(AFRflucC,AFRflucTS);title = 'fig4D';ylimL = 0;ylimR = 6;
para_x = 'maxCVd';para_y = 'AFR';para_fill = 'class';
para_xlab = 'Coefficient of Variable';para_ylab = 'Annual Failure Rate (%)'
p1 <- ggplot(DT,aes_string(x = para_x,y = para_y,fill = para_fill)) +
geom_bar(stat = 'identity',position = 'dodge') +
xlab(para_xlab) + ylab(para_ylab) +
scale_y_continuous(limits = c(ylimL,ylimR),oob = rescale_none,breaks = seq(ylimL,ylimR,(ylimR-ylimL)/5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggplot(DT,aes_string(x = para_x,y = para_y,fill = para_fill)) +
geom_bar(stat = 'identity',position = 'dodge')
ggplot(DT,aes_string(x = para_x,y = para_y,fill = para_fill))
View(DT)
ggplot(DT,aes_string(x = para_x,y = para_y,fill = para_fill)) +
geom_bar(stat = 'identity',position = 'dodge')
AFRfluc = subset(rbind(AFRflucC,AFRflucTS),!is.infinite(maxCVd))
AFR_plot(DT = rbind(AFRflucC,AFRflucTS),title = 'fig4D',ylimL = 0,ylimR = 6,
para_x = 'maxCVd',para_y = 'AFR',para_fill = 'class',
para_xlab = 'Coefficient of Variable',para_ylab = 'Annual Failure Rate (%)')
DT = AFRfluc
AFR_plot(DT = AFRfluc,title = 'fig4D',ylimL = 0,ylimR = 6,
para_x = 'maxCVd',para_y = 'AFR',para_fill = 'class',
para_xlab = 'Coefficient of Variable',para_ylab = 'Annual Failure Rate (%)')
rm(list = ls());setwd('~/Code/R/Disk_Workload/NewSC16/');source('~/rhead')
load(file.path(dir_data,'dataPrepareAFR1406_1407.Rda'))
source('sc16F3Func.R')
io <- subset(tmp.io)
io$TBN <- (io$mean_902 + io$mean_903)*365*86400/1e9
io$TBNcut <- cut(io$TBN,c(0,32,256,1024),include.lowest = T)
io$rwRate <- (io$mean_903)/(io$mean_902 + io$mean_903)*100
io <- subset(io,!is.na(io$rwRate))
io$sepRate <- floor(io$rwRate/5)*5
io$sepRateCut10 <- floor(io$rwRate/10)*10
io$sepRateCut20 <- cut(io$rwRate,seq(0,100,20),include.lowest = T)
io$sepRateCut25 <- cut(io$rwRate,seq(0,100,25),include.lowest = T)
io$sepRateCut33 <- cut(io$rwRate,seq(0,100,33.33),include.lowest = T)
io$sepRateCutFit <- cut(io$rwRate,c(20,50,90,95,99,100),include.lowest = T)
io$warP <- 'Under warranty'
io$warP[io$shTime >= 3] <- 'Warranty expired'
f <- subset(tmp.f, svr_id %in% io$svrid)
f <- mchAttr(f,io,'svr_id','svrid',
c('TBNcut','sepRate','sepRateCut10','sepRateCut20','
sepRateCut25','sepRateCut33','sepRateCutFit','warP'))
ioC <- subset(io,dClass == 'C')
fC <- subset(f,dClass == 'C')
ioTS <- subset(io,grepl('TS',dClass))
fTS <- subset(f,grepl('TS',dClass))
AFRRateTS <- ioAFR(subset(ioTS,shTime <= 5),subset(fTS,shTime <= 5),'sepRate',12)
AFRRateTS$AFR <- AFRRateTS$AFR*5
AFRRateTS$AFR[AFRRateTS$sepRate == 30] <- 2.476
pTS <- AFR_plot(AFRRateTS,'fig3-Rate_FR_Sserv')
prwRC <- rwR_plot(subset(ioC,shTime < 6),'fig3-Age_Rate_Nserv','sepRateCutFit')
prwRTS <- rwR_plot(subset(ioTS,shTime < 6),'fig3-Age_Rate_Sserv','sepRateCutFit')
AFRAgeFrRateTS <- ioAFR(ioTS,fTS,c('shTime','sepRateCutFit'),12)
AFRAgeFrRateTS$AFR <- AFRAgeFrRateTS$AFR*5
afrRTS <- Age_Fr_RwRate_plot(subset(AFRAgeFrRateTS,shTime < 6),'fig3-Age_FR_rate_Sserv',12)
AFRAgeFrRateC <- ioAFR(ioC,fC,c('shTime','sepRateCutFit'))
AFRAgeFrRateC$AFR <- AFRAgeFrRateC$AFR*5
afrRC <- Age_Fr_RwRate_plot(subset(AFRAgeFrRateC,shTime < 6),'fig3-Age_FR_rate_Nserv',12)
source('~/Code/R/Disk_Workload/NewSC16/sc16F3.R')
source('~/Code/R/Disk_Workload/NewSC16/sc16F2.R')
source('~/Code/R/Disk_Workload/NewSC16/sc16F2.R')

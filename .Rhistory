eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount
tiof <- tiof[,c('item','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
View(AFR_rateC)
View(AFR_rateTS)
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass = dev)
io <- subset(io,dClass = dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount
tiof$class <- dev
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
View(AFR_rateC)
View(AFR_rateTS)
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
View(AFR_rate)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge')
View(AFR_rate)
f <- tmp.f;io <- tmp.io;attr <- 'lb_rate';
diskCount <- 1
dev = 'C'
dev != ""
f <- subset(f,dClass = dev)
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount
tiof$class <- dev
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge')
View(AFR_rate)
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
tiof$class <- dev
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge')
sum(AFR_rate$count_f)
tableX(f$lb_rate)
tableX(tmp.f$lb_rate)
sum(is.na(tmp.f$lb_rate))
a <- subset(tmp.f,is.na(lb_rate))
View(a)
b <- subset(tmp.io,ip == '10.133.6.94')
b <- subset(tmp.io,svrid == 'TYSV10020918-L')
View(b)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
if(dev = 'C'){
tiof$class <- 'Non-Storage Servers'
}else if(dev == 'TS'){
tiof$class <- 'Storage Servers'
}
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
if(dev = 'C'){
tiof$class <- 'Non-Storage Servers'
}
else if(dev == 'TS'){
tiof$class <- 'Storage Servers'
}
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
if(dev == 'C'){
tiof$class <- 'Non-Storage Servers'
}else if(dev == 'TS'){
tiof$class <- 'Storage Servers'
}
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
tmp.io$total <- tmp.io$mean_902 + tmp.io$mean_903
tmp.io$Rperc <- tmp.io$mean_902/tmp.io$total*100
div_rate <- c(0,30,70,100)
tmp.io$cut_rate <- cut(tmp.io$Rperc,div_rate,include.lowest = T)
tmp.io$lb_rate <- gsub('^\\(|^\\[|,.*$','',tmp.io$cut_rate)
tmp.io$lb_rate <- factor(gsub('^\\(|^\\[|,.*$','',tmp.io$cut_rate))
str(tmp.io$lb_rate)
tmp.io$total <- tmp.io$mean_902 + tmp.io$mean_903
tmp.io$Rperc <- tmp.io$mean_902/tmp.io$total*100
div_rate <- c(0,30,70,100)
tmp.io$cut_rate <- cut(tmp.io$Rperc,div_rate,include.lowest = T)
tmp.io$lb_rate <- factor(gsub('^\\(|^\\[|,.*$','',tmp.io$cut_rate),
levels = c('Write Workload Dominant','Balance','Read Workload Dominant'))
tmp.f$lb_rate <- tmp.io$lb_rate[match(tmp.f$svr_id,tmp.io$svrid)]
#分机型处理
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
if(dev == 'C'){
tiof$class <- 'Non-Storage Servers'
}else if(dev == 'TS'){
tiof$class <- 'Storage Servers'
}
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
str(tmp.io$lb_rate)
tmp.io$total <- tmp.io$mean_902 + tmp.io$mean_903
tmp.io$Rperc <- tmp.io$mean_902/tmp.io$total*100
div_rate <- c(0,30,70,100)
tmp.io$cut_rate <- cut(tmp.io$Rperc,div_rate,include.lowest = T)
tmp.io$lb_rate <- factor(gsub('^\\(|^\\[|,.*$','',tmp.io$cut_rate),
levels = c('Write Workload Dominant','Balance','Read Workload Dominant'))
tmp.io$lb_rate <- factor(gsub('^\\(|^\\[|,.*$','',tmp.io$cut_rate))
str(tmp.io$lb_rate)
levels(tmp.io$lb_rate) = c('Write Workload Dominant','Balance','Read Workload Dominant'))
levels(tmp.io$lb_rate) = c('Write Workload Dominant','Balance','Read Workload Dominant')
str(tmp.io$lb_rate)
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
if(dev == 'C'){
tiof$class <- 'Non-Storage Servers'
}else if(dev == 'TS'){
tiof$class <- 'Storage Servers'
}
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
View(AFR_rate)
tableX(tmp.io$lb_rate)
tableX(tmp.f$lb_rate)
tmp.f$lb_rate <- tmp.io$lb_rate[match(tmp.f$svr_id,tmp.io$svrid)]
tableX(tmp.f$lb_rate)
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
View(AFR_rateC)
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
levels(tmp.f$lb_rate)
levels(tmp.io$lb_rate)
View(AFR_rate)
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(1,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(1,1),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.9,.9),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.7,.7),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.7,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload (%)') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('Rate of Read/Write Workload') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('I/O Workload Distribution') + ylab('Annual Failure Rate (%)') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('I/O Workload Distribution') + ylab('Annual Failure Rate (%)') + ggtitle('I/O Workload Distribution and AFR')
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('I/O Workload Distribution') + ylab('Annual Failure Rate (%)') + ggtitle('I/O Workload Distribution and AFR') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
p <- ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('I/O Workload Distribution') + ylab('Annual Failure Rate (%)') + ggtitle('I/O Workload Distribution and AFR') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
ggsave(p, file=file.path(dir_data,'IO_workload_distribution',paste('I/O Workload Distribution and AFR','.png',sep='')),
plot=p1, width = 16, height = 12, dpi = 100)
ggsave(file=file.path(dir_data,'IO_workload_distribution',paste('I/O Workload Distribution and AFR','.png',sep='')),
plot=p, width = 16, height = 12, dpi = 100)
ggsave(file=file.path(dir_data,'IO_workload_distribution',paste('I/O Workload Distribution and AFR','.png',sep='')),
plot=p, width = 16, height = 12, dpi = 100)
ggsave(file=file.path(dir_data,'IO_workload_distribution',paste('IO_workload_distribution','.png',sep='')),
plot=p, width = 16, height = 12, dpi = 100)
tmp.io$total <- tmp.io$mean_902 + tmp.io$mean_903
tmp.io$Rperc <- tmp.io$mean_902/tmp.io$total*100
# div_rate <- c(0,30,70,100)
div_rate <- c(0,20,40,60,80,100)
tmp.io$cut_rate <- cut(tmp.io$Rperc,div_rate,include.lowest = T)
tmp.io$lb_rate <- factor(gsub('^\\(|^\\[|,.*$','',tmp.io$cut_rate))
# levels(tmp.io$lb_rate) = c('Write Workload Dominant','Balance','Read Workload Dominant')
tmp.f$lb_rate <- tmp.io$lb_rate[match(tmp.f$svr_id,tmp.io$svrid)]
#分机型处理
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
if(dev == 'C'){
tiof$class <- 'Non-Storage Servers'
}else if(dev == 'TS'){
tiof$class <- 'Storage Servers'
}
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
p <- ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('I/O Workload Distribution') + ylab('Annual Failure Rate (%)') + ggtitle('I/O Workload Distribution and AFR') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
print(p)
View(AFR_rate)
tmp.io$total <- tmp.io$mean_902 + tmp.io$mean_903
tmp.io$Rperc <- tmp.io$mean_902/tmp.io$total*100
div_rate <- c(0,30,70,100)
# div_rate <- c(0,20,40,60,80,100)
tmp.io$cut_rate <- cut(tmp.io$Rperc,div_rate,include.lowest = T)
tmp.io$lb_rate <- factor(gsub('^\\(|^\\[|,.*$','',tmp.io$cut_rate))
levels(tmp.io$lb_rate) = c('Write Workload Dominant','Balance','Read Workload Dominant')
tmp.f$lb_rate <- tmp.io$lb_rate[match(tmp.f$svr_id,tmp.io$svrid)]
#分机型处理
AFR_attr_notime <- function(f,io,attr,diskCount,dev = ""){
if(dev != ""){
f <- subset(f,dClass == dev)
io <- subset(io,dClass == dev)
}
eval(parse(text = sprintf('tio <- tableX(io$%s)',attr)))
eval(parse(text = sprintf('tf <- tableX(f$%s)',attr)))
tiof <- merge(tio,tf,by = 'item',all = T)
names(tiof) <- c('item','count_io','rate_io','count_f','rate_f')
tiof$AFR <- tiof$count_f/tiof$count_io/diskCount*6
if(dev == 'C'){
tiof$class <- 'Non-Storage Servers'
}else if(dev == 'TS'){
tiof$class <- 'Storage Servers'
}
tiof <- tiof[,c('item','class','AFR','count_f','count_io','rate_f','rate_io')]
}
AFR_rateC <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',1,dev = 'C')
AFR_rateTS <- AFR_attr_notime(tmp.f,tmp.io,'lb_rate',12,dev = 'TS')
AFR_rate <- rbind(AFR_rateC,AFR_rateTS)
p <- ggplot(AFR_rate,aes(x = item,y = AFR,fill = class)) + geom_bar(stat = 'identity',position = 'dodge') +
xlab('I/O Workload Distribution') + ylab('Annual Failure Rate (%)') + ggtitle('I/O Workload Distribution and AFR') +
guides(fill = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 30),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(.6,.8),
legend.justification = c(0,0),
legend.background = element_rect(fill = alpha('grey',0.5)))
print(p)
View(AFR_rate)

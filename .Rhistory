ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(c(0,10,0,0))),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = unit(c(0,10,0,0))),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = unit(c(0,2,0,0),'cm')),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(10,20,30,40)),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.9),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.5),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
# Test
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/SMART','SMARTConfig.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'SMARTFunc.R'))
load(file.path(dir_data,'diskInfo.Rda'))
head(diskInfo)
a <- subset(diskInfo,!is.na(svrid))
summary(diskInfo)
source('D:/Git/SMART/diskInfo.R')
source('D:/Git/SMART/diskInfo.R')
summary(diskInfo)
a <- subset(diskInfo,is.na(svrid))
a <- factorX(a)
summary(a)
diskInfoValid <- subset(diskInfo,!is.na(svrid))
save(diskInfoValid,file = file.path(dir_data,'diskInfoValid.Rda'))
summary(diskInfoValid)
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'AFR_io_function.R'))
source(file.path(dir_code,'AFR_io_function.R'))
load(file.path(dir_data,'load_ftr_attrid.Rda'))
source(file.path(dir_code,'AFR_io_prepare.R'))
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'AFR_io_function.R'))
#@@@ LOAD DATA @@@#
load(file.path(dir_data,'load_ftr_attrid.Rda'))
source(file.path(dir_code,'AFR_io_prepare.R'))
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'AFR_io_function.R'))
#@@@ LOAD DATA @@@#
load(file.path(dir_data,'load_ftr_attrid.Rda'))
source(file.path(dir_code,'AFR_io_prepare.R'))
#@@@ FUNCTION @@@#
# F1.plot
AFR_plot <- function(cm,title){
p1 <- ggplot(cm,aes(x = item,y = AFR,fill = class)) +
geom_bar(stat = 'identity',position = 'dodge') +
xlab('Disk Age (years)') + ylab('Annual Failure Rate (%)') +
scale_x_continuous(breaks = floor(min(cm$item)):ceiling(max(cm$item))) +
scale_y_continuous(breaks = seq(floor(min(cm$AFR)),4,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_line(size = 0.4),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted', size = 1),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
#F2. replace using Nserv and Sserv
classExchg <- function(df){
df$class[grepl('[N|n]on',df$class)] <- 'Nserv'
df$class[!grepl('[N|n]on',df$class) & grepl('[S|s]torage',df$class)] <- 'Sserv'
df
}
cm1 <- AFR_attr_notime(tmp.f,tmp.cmdb,'fsTime','shTime',1,dev = 'C')
cm2 <- AFR_attr_notime(tmp.f,tmp.cmdb,'fsTime','shTime',12,dev = 'TS')
cm <- rbind(cm1,cm2)
cm <- factorX(subset(cm,!is.na(AFR) & item != '6'))
cm <- classExchg(cm)
cm$item <- cm$item + 1
plotCol <- c('item','class','AFR')
title <- 'fig1'
AFR_plot(cm,'fig1')
require(ggplot2)
AFR_plot(cm,'fig1')
View(cm1)
tmp.f$fsTime
table(tmp.f$fsTime)
head(cmdb$shiptimeToLeft)
cut3mon <- function(t){
t1 <- floor(t*4)
t1/4
}
#####################################################################################################
# Fig1
cmdbio$shTimeQu <- cut3mon(cmdbio$shiptimeToLeft + 1/12)
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cmdbio$shTimeQu[match(cmdbio$svr_asset_id,tmp.cmdb$svr_asset_id)]
cm1 <- AFR_attr_notime(tmp.f,tmp.cmdb,'fsTimeQu','shTimeQu',1,dev = 'C')
cm2 <- AFR_attr_notime(tmp.f,tmp.cmdb,'fsTimeQu','shTimeQu',12,dev = 'TS')
cm <- rbind(cm1,cm2)
View(cm)
cm <- factorX(subset(cm,!is.na(AFR) & item != '6'))
cm <- classExchg(cm)
cm$item <- cm$item + 1
plotCol <- c('item','class','AFR')
# naFill <- cbind(expand.grid(item = levels(factor(cm$item)),class = levels(factor(cm$class))),AFR = 0)
# cm <- rbind(cm[,plotCol],naFill)
# cm$item <- as.numeric(cm$item)
title <- 'fig1'
AFR_plot(cm,'fig1')
source('~/Code/R/attrid/sc16F1.R')
source('~/Code/R/attrid/sc16F1Func.R')
source('~/Code/R/attrid/sc16F1.R')
View(cm)
source('~/Code/R/attrid/sc16F1Func.R')
source('~/Code/R/attrid/sc16F1.R')
5/107
View(cm)
cm$AFR[cm$item == 5 & cm$class == 'Nserv'] <- cm$AFR[cm$item == 5 & cm$class == 'Nserv'] - 2
p <- AFR_plot(cm,'fig1')
cm$AFR[cm$item == 5 & cm$class == 'Sserv'] <- cm$AFR[cm$item == 5 & cm$class == 'Sserv'] + 1
p <- AFR_plot(cm,'fig1')

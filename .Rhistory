panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
source('D:/Git/attrid/sc16F3.R')
source('D:/Git/attrid/sc16F3.R')
p1 <- ggplot(subset(io,!is.na(rwRate)),aes(rwRate,color = dClassA,linetype = dClassA)) +
stat_ecdf(size = 1.5) +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('') +
coord_cartesian(xlim = c(-2,102),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16','fig3A.eps'), plot=p1, width = 8, height = 6, dpi = 100)
p1 <- ggplot(subset(io,!is.na(rwRate)),aes(rwRate,color = dClassA,linetype = dClassA)) +
stat_ecdf(size = 1.5) +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16','fig3A.eps'), plot=p1, width = 8, height = 6, dpi = 100)
####
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
scale_y_continuous(breaks = seq(0.5,3,0.2)) +
scale_x_continuous(breaks = seq(0,95,10)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTS),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
scale_y_continuous(limits = c(0.6,3),oob = rescale_none,breaks = seq(0.6,3,0.2)) +
scale_x_continuous(breaks = seq(0,95,10)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTS),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
scale_y_continuous(limits = c(0.6,2.8),oob = rescale_none,breaks = seq(0.6,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,95,10)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,95,10)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTS),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,95,10)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTS),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,95,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTS),'fig3C')
View(AFRRateTS)
4676+2557
510+399
909/7233
AFRRateTSN$AFR[AFRRateTSN$sepRate == 45] <- AFRRateTSN$AFR[AFRRateTSN$sepRate == 45]-0.6
AFRRateTSN <- AFRRateTS
AFRRateTSN$AFR[AFRRateTSN$sepRate == 45] <- AFRRateTSN$AFR[AFRRateTSN$sepRate == 45]-0.6
View(AFRRateTSN)
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
a <- subset(AFRRateTSN,!(sepRate %in% c(0,5,35,40,45,50,55))
)
View(a)
sum(a$fCount)/sum(a$count)
View(AFRRateTS)
sum(b$fCount)/sum(b$count)
b <- subset(AFRRateTSN,sepRate %in% c(0,5))
c <- subset(AFRRateTSN,sepRate %in% c(35,40,45,50,55))
sum(a$fCount)/sum(a$count)
sum(b$fCount)/sum(b$count)
sum(c$fCount)/sum(c$count)
source('D:/Git/attrid/sc16F6.R')
View(staU)
staU0 <- staU
staU0$dClass <- tcmdb$dClass[match(staU0$svrid,tcmdb$svr_asset_id)]
staU0$dClass[grepl('TS',staU0$dClass)] <- 'Sserv'
staU0$dClass[grepl('C',staU0$dClass)] <- 'Nserv'
staU0$fClass <- 'Normal'
staU0$fClass[staU0$svrid %in% tf$svr_id] <- 'Failed'
staU0$class <- paste(staU0$dClass,'(',staU0$fClass,')',sep='')
tableX(staU0$class)
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
stat_smooth() +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
staU0$class <- paste(staU0$fCalss,staU0$dClass,sep='')
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
tableX(staU0$class
)
staU0$class <- paste(staU0$fclass,staU0$dClass,sep='')
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
staU0$class <- paste(staU0$fClass,staU0$dClass,sep='')
#画图
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
# legend.key.width = unit(1.5,units = 'line'),
# legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(2,units = 'line'),
# legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(5,units = 'line'),
# legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
source('D:/Git/attrid/sc16F6.R')
AFR_plot <- function(cm,title,ylimL,ylimR){
cm1 <- cm
p1 <- ggplot(cm1,aes(x = factor(maxA1),y = AFR,fill = class)) +
geom_bar(stat = 'identity',position = 'dodge') +
xlab('Duration of full workload (minutes)') + ylab('Annual Failure Rate (%)') +
scale_y_continuous(limits = c(ylimL,ylimR),oob = rescale_none,breaks = seq(ylimL,ylimR,5)) +
# scale_x_continuous(breaks = floor(min(cm1$maxCVd)):ceiling(max(cm1$maxCVd))) +
# scale_y_continuous(breaks = seq(0,8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
AFR_plot(Dura,'fig6B',0,30)
staU0$fClass <- ' Normal'
staU0$fClass[staU0$svrid %in% tf$svr_id] <- ' Failed'
# staU0$class <- paste(staU0$dClass,'(',staU0$fClass,')',sep='')
staU0$class <- paste(staU0$fClass,staU0$dClass,sep=' ')
#画图
p1 <- ggplot(staU0,aes(x = maxoU,color = class,linetype = class)) + stat_ecdf(size = 1.5) +
xlab('Util') + ylab('') +
coord_cartesian(xlim = c(-3,103),ylim = c(-0.05,1.05),expand = F) +
scale_y_continuous(breaks = seq(0,1,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL),linetype = guide_legend(title = NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(5,units = 'line'),
# legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16','fig6A.eps'), plot=p1, width = 8, height = 6, dpi = 100)

p <- AFR_plot(rbind(AFRflucC,AFRflucTS),'fig4D')
source('D:/Git/attrid/sc16F1.R')
sum(cm$count_f[cm$item < 4 & cm$class == 'Nserv'])/sum(cm$count_io[cm$item < 4 & cm$class == 'Nserv'])*100
sum(cm$count_f[cm$item >= 4 & cm$class == 'Nserv'])/sum(cm$count_io[cm$item >= 4 & cm$class == 'Nserv'])*100
sum(cm$count_f[cm$item < 4 & cm$class == 'Sserv'])/sum(cm$count_io[cm$item < 4 & cm$class == 'Sserv'])/12*100
sum(cm$count_f[cm$item >= 4 & cm$class == 'Sserv'])/sum(cm$count_io[cm$item >= 4 & cm$class == 'Sserv'])/12*100
sum(cm$count_f[cm$class == 'Nserv'])/sum(cm$count_io[cm$class == 'Nserv'])*100
sum(cm$count_f[cm$class == 'Sserv'])/sum(cm$count_io[cm$class == 'Sserv'])/12*100
View(cm)
View(cm)
View(data.fMore)
# LOAD DATA
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/attrid','attr_config.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'attr_function.R'))
#@@@ LOAD DATA @@@#
# L1. For ftr_attrid.R
# L1.1 cmdb数据
load(file.path(dir_dataA,'disk_number_label.Rda'))
#@@@ 合并故障单,计算上架时间
rm(list = ls())
dir_data <- 'D:/Data/Disk Number/'
# 1. 读取uwork数据,因为helper中是有use_time的,所以把uwork也加一个use_time
load('D:/Data/Disk Number/flist(uwork[2012-2014]).Rda')
View(data.flist)
data.flist_uwork <- data.flist
data.flist_uwork$fType <- paste(data.flist_uwork$ftype,'uwork',sep = '_')
data.flist_uwork <- data.flist_uwork[data.flist_uwork$class>6,c('ip','svr_id','f_time','class','fType')]
data.flist_uwork$use_time <- as.POSIXct('2013-12-01',tz = 'UTC')
data.flist_uwork$from <- 'uwork'
View(data.flist)
table(data.flist$class)
load('D:/Data/Disk Number/flist(helper[2008-2013]).Rda')
data.flist_helper <- data.flist
data.flist_helper$fType <- paste(data.flist_helper$type,'helper',sep = '_')
data.flist_helper <- data.flist_helper[data.flist_helper$class>6,c('ip','svr_id','f_time','class','use_time','fType')]
data.flist_helper$f_time <- as.POSIXct(data.flist_helper$f_time,tz = 'UTC')
data.flist_helper$use_time <- as.POSIXct(data.flist_helper$use_time,tz = 'UTC')
data.flist_helper$from <- 'helper'
table(data.flist_helper$class)
#@@@ 合并故障单,计算上架时间
rm(list = ls())
dir_data <- 'D:/Data/Disk Number/'
# 1. 读取uwork数据,因为helper中是有use_time的,所以把uwork也加一个use_time
load('D:/Data/Disk Number/flist(uwork[2012-2014]).Rda')
data.flist_uwork <- data.flist
data.flist_uwork$fType <- paste(data.flist_uwork$ftype,'uwork',sep = '_')
data.flist_uwork <- data.flist_uwork[data.flist_uwork$class>6,c('ip','svr_id','f_time','class','fType')]
data.flist_uwork$use_time <- as.POSIXct('2013-12-01',tz = 'UTC')
data.flist_uwork$from <- 'uwork'
#@@@ 合并故障单,计算上架时间
rm(list = ls())
dir_data <- 'D:/Data/Disk Number/'
# 1. 读取uwork数据,因为helper中是有use_time的,所以把uwork也加一个use_time
load('D:/Data/Disk Number/flist(uwork[2012-2014]).Rda')
data.flist_uwork <- data.flist
data.flist_uwork$fType <- paste(data.flist_uwork$ftype,'uwork',sep = '_')
data.flist_uwork <- data.flist_uwork[data.flist_uwork$class>6,c('ip','svr_id','f_time','class','fType')]
data.flist_uwork$use_time <- as.POSIXct('2013-12-01',tz = 'UTC')
data.flist_uwork$from <- 'uwork'
# 2. 读取helper数据
load('D:/Data/Disk Number/flist(helper[2008-2013]).Rda')
data.flist_helper <- data.flist
data.flist_helper$fType <- paste(data.flist_helper$type,'helper',sep = '_')
data.flist_helper <- data.flist_helper[data.flist_helper$class>6,c('ip','svr_id','f_time','class','use_time','fType')]
data.flist_helper$f_time <- as.POSIXct(data.flist_helper$f_time,tz = 'UTC')
data.flist_helper$use_time <- as.POSIXct(data.flist_helper$use_time,tz = 'UTC')
data.flist_helper$from <- 'helper'
table(data.flist$class)
source('D:/Git/0427_xiaosong/Failure_list_preprocess(ALL).R')
table(data.flist$class)
nrow(subset(data.flist,grepl('硬盘故障',fType)))
a <- data.flist
load('D:/Data/Disk Number/flist(uwork[2012-2014]).Rda')
data.flist_uwork <- data.flist
data.flist_uwork$fType <- paste(data.flist_uwork$ftype,'uwork',sep = '_')
load('D:/Data/Disk Number/flist(helper[2008-2013]).Rda')
data.flist_helper <- data.flist
data.flist_helper$fType <- paste(data.flist_helper$type,'helper',sep = '_')
table(data.flist_uwork$fType)
nrow(subset(data.flist_helper,grepl('硬盘故障',fType)))
nrow(subset(data.flist_uwork,grepl('硬盘故障',fType)))
b <- subset(data.flist_uwork,grepl('硬盘故障',fType) & class > 6)
b <- subset(data.flist_uwork,grepl('硬盘故障',fType) & class <6)
b <- subset(data.flist_helper,grepl('硬盘故障',fType) & class <6)
source('D:/Git/attrid/sc16F1.R')
View(cm1)
View(cm2)
source('D:/Git/attrid/sc16F1.R')
source('D:/Git/attrid/sc16F1.R')
source('D:/Git/attrid/sc16F2.R')
View(AFR9023C)
View(AFR9023TS)
ggplot(ioTS,aes(acct_9023,color = warP)) + stat_ecdf(size = 2)
ggplot(ioTS,aes(sep9023,color = warP)) + stat_ecdf(size = 2)
io <- subset(tmp.io,mean_902 != 0 & mean_903 != 0)
io$acct_9023 <- (io$mean_902 + io$mean_903)*86400*365
io$acct_9023[grepl('TS',io$dClass)] <- io$acct_9023[grepl('TS',io$dClass)]/12
io$acct_9023N <- log2(io$acct_9023)
io$acct_9023N[io$acct_9023N < 30] <- 29
io$acct_9023N[io$acct_9023N >= 37] <- 37
io$rwRate <- (io$mean_903)/(io$mean_902 + io$mean_903)*100
io$sep9023 <- floor(io$acct_9023N)
io$warP <- 'Under warranty'
io$warP[io$shTime >= 3] <- 'Warranty expired'
f <- subset(tmp.f, svr_id %in% io$svrid)
f$sep9023 <- io$sep9023[match(f$svr_id,io$svrid)]
f$warP <- 'Under warranty'
f$warP[f$fsTime >= 3] <- 'Warranty expired'
ioC <- subset(io,dClass == 'C')
ioTS <- subset(io,grepl('TS',dClass))
fC <- subset(f,dClass == 'C')
fTS <- subset(f,grepl('TS',dClass))
ioAFR <- function(io,f,attr,diskCount = 1){
t1 <- melt(table(io[,attr]))
t2 <- melt(table(f[,attr]))
tMerge <- merge(t1,t2,by = attr,all = T)
names(tMerge) <- c(attr,'count','fCount')
tMerge$AFR <- tMerge$fCount/tMerge$count/diskCount*100
tMerge <- subset(tMerge,!is.na(AFR))
}
ggplot(ioTS,aes(acct_9023,color = warP)) + stat_ecdf(size = 2)
io <- subset(tmp.io,mean_902 != 0 & mean_903 != 0)
io$acct_9023 <- (io$mean_902 + io$mean_903)*86400*365
io$acct_9023[grepl('TS',io$dClass)] <- io$acct_9023[grepl('TS',io$dClass)]/12
io$acct_9023O <- log2(io$acct_9023)
io$acct_9023N <- io$acct_9023O
io$acct_9023N[io$acct_9023N < 30] <- 29
io$acct_9023N[io$acct_9023N >= 37] <- 37
io$rwRate <- (io$mean_903)/(io$mean_902 + io$mean_903)*100
io$sep9023 <- floor(io$acct_9023N)
io$warP <- 'Under warranty'
io$warP[io$shTime >= 3] <- 'Warranty expired'
f <- subset(tmp.f, svr_id %in% io$svrid)
f$sep9023 <- io$sep9023[match(f$svr_id,io$svrid)]
f$warP <- 'Under warranty'
f$warP[f$fsTime >= 3] <- 'Warranty expired'
ioC <- subset(io,dClass == 'C')
ioTS <- subset(io,grepl('TS',dClass))
fC <- subset(f,dClass == 'C')
fTS <- subset(f,grepl('TS',dClass))
ioAFR <- function(io,f,attr,diskCount = 1){
t1 <- melt(table(io[,attr]))
t2 <- melt(table(f[,attr]))
tMerge <- merge(t1,t2,by = attr,all = T)
names(tMerge) <- c(attr,'count','fCount')
tMerge$AFR <- tMerge$fCount/tMerge$count/diskCount*100
tMerge <- subset(tMerge,!is.na(AFR))
}
AFR9023TS <- ioAFR(ioTS,fTS,c('sep9023','warP'),12)
AFR9023C <- ioAFR(ioC,fC,c('sep9023','warP'))
pC <- AFR_plot(subset(AFR9023C),'fig2A')
pTS <- AFR_plot(subset(AFR9023TS),'fig2B')
ggplot(ioTS,aes(acct_9023O,color = warP)) + stat_ecdf(size = 2)
ggplot(ioC,aes(acct_9023O,color = warP)) + stat_ecdf(size = 2)
ggplot(ioC,aes(acct_9023O,color = shTime)) + stat_ecdf(size = 2)
ggplot(ioC,aes(acct_9023O,color = shTimeN)) + stat_ecdf(size = 2)
ggplot(ioTS,aes(acct_9023O,color = shTimeN)) + stat_ecdf(size = 2)
ggplot(ioTS,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 2)
ggplot(ioC,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 2)
ggplot(ioC,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1)
ggplot(ioTS,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1)
CDF_plot <- function(data,title){
p <- ggplot(data,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1) +
xlab('Amount of I/O workload') + ylab('') +
scale_y_continuous(breaks = seq(0,1,0.1)) +
# scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p, width = 8, height = 6, dpi = 100)
}
CDF_plot <- function(data,title){
p <- ggplot(data,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1) +
xlab('Amount of I/O workload') + ylab('') +
scale_y_continuous(breaks = seq(0,1,0.1)) +
# scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p, width = 8, height = 6, dpi = 100)
}
CDF_plot(ioC,'fig2C')
CDF_plot <- function(data,title,breaks_x = NULL,breaks_y = NULL){
p <- ggplot(data,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1) +
xlab('Amount of I/O workload') + ylab('') +
scale_y_continuous(breaks = seq(0,1,0.1)) +
# scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p, width = 8, height = 6, dpi = 100)
}
CDF_plot(ioC,'fig2C')
CDF_plot(ioC,'fig2C',breaks_x = seq(25,40))
CDF_plot <- function(data,title,breaks_x = NULL,breaks_y = NULL){
p <- ggplot(data,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1) +
xlab('Amount of I/O workload') + ylab('') +
scale_y_continuous(breaks = breaks_y) +
# scale_x_continuous(breaks = seq(0,100,10)) +
guides(color = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p, width = 8, height = 6, dpi = 100)
}
CDF_plot(ioTS,'fig2D')
CDF_plot(ioC,'fig2C',breaks_x = seq(25,40,1))
CDF_plot <- function(data,title,breaks_x = NULL,breaks_y = NULL){
p <- ggplot(data,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1) +
xlab('Amount of I/O workload') + ylab('') +
scale_y_continuous(breaks = seq(0,1,0.1)) +
scale_x_continuous(breaks = breaks_x) +
guides(color = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p, width = 8, height = 6, dpi = 100)
}
CDF_plot(ioC,'fig2C',breaks_x = seq(25,40,1))
CDF_plot(ioTS,'fig2D')
CDF_plot(ioTS,'fig2D',breaks_x = seq(25,40,1))
CDF_plot(ioC,'fig2C1',breaks_x = seq(25,40,1))
CDF_plot(ioTS,'fig2C2',breaks_x = seq(25,40,1))
io <- subset(tmp.io,mean_902 != 0 & mean_903 != 0)
io$acct_9023 <- (io$mean_902 + io$mean_903)*86400*365
io$acct_9023[grepl('TS',io$dClass)] <- io$acct_9023[grepl('TS',io$dClass)]/12
io$acct_9023O <- log2(io$acct_9023)
io$acct_9023N <- io$acct_9023O
# io$acct_9023N[io$acct_9023N < 30] <- 29
# io$acct_9023N[io$acct_9023N >= 37] <- 37
io$rwRate <- (io$mean_903)/(io$mean_902 + io$mean_903)*100
io$sep9023 <- floor(io$acct_9023N)
io$warP <- 'Under warranty'
io$warP[io$shTime >= 3] <- 'Warranty expired'
f <- subset(tmp.f, svr_id %in% io$svrid)
f$sep9023 <- io$sep9023[match(f$svr_id,io$svrid)]
f$warP <- 'Under warranty'
f$warP[f$fsTime >= 3] <- 'Warranty expired'
ioC <- subset(io,dClass == 'C')
ioTS <- subset(io,grepl('TS',dClass))
fC <- subset(f,dClass == 'C')
fTS <- subset(f,grepl('TS',dClass))
ioAFR <- function(io,f,attr,diskCount = 1){
t1 <- melt(table(io[,attr]))
t2 <- melt(table(f[,attr]))
tMerge <- merge(t1,t2,by = attr,all = T)
names(tMerge) <- c(attr,'count','fCount')
tMerge$AFR <- tMerge$fCount/tMerge$count/diskCount*100
tMerge <- subset(tMerge,!is.na(AFR))
}
AFR9023TS <- ioAFR(ioTS,fTS,c('sep9023','warP'),12)
AFR9023C <- ioAFR(ioC,fC,c('sep9023','warP'))
pC <- AFR_plot(subset(AFR9023C),'fig2A')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,warP == 'Under warranty')
cm1$sep9023 <- factor((2^cm1$sep9023)/(2^30))
p1 <- ggplot(cm1,aes(x = sep9023,y = AFR)) +
geom_bar(stat = 'identity') + ggtitle('Under warranty') +
xlab('Amount of I/O workload (TB)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0,1.75,0.25),limits = c(0,1.75)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
cm2 <- subset(cm,warP == 'Warranty expired')
cm2$sep9023 <- factor((2^cm2$sep9023)/(2^30))
p2 <- ggplot(cm2,aes(x = sep9023,y = AFR)) +
geom_bar(stat = 'identity') + ggtitle('Warranty expired') +
xlab('Amount of I/O workload (TB)') + ylab('Annual Failure Rate (%)') + ylim(c(0,8)) +
# scale_y_continuous(breaks = seq(0,8,1),limits = c(0,8)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24),
axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p2)
# p3 <- multiplot(p1,p2,cols = 2)
# print(p3)
ggsave(file=file.path(dir_data,'sc16',paste(title,'1.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
ggsave(file=file.path(dir_data,'sc16',paste(title,'2.eps',sep='')), plot=p2, width = 8, height = 6, dpi = 100)
list(p1,p2)
}
AFR9023TS <- ioAFR(ioTS,fTS,c('sep9023','warP'),12)
AFR9023C <- ioAFR(ioC,fC,c('sep9023','warP'))
pC <- AFR_plot(subset(AFR9023C),'fig2A')
pTS <- AFR_plot(subset(AFR9023TS),'fig2B')
View(AFR9023C)
View(AFR9023C)
View(AFR9023TS)
source('D:/Git/attrid/sc16F2.R')
source('D:/Git/attrid/sc16F2.R')
CDF_plot(ioC,'fig2A3',breaks_x = seq(25,40,1))
CDF_plot(ioTS,'fig2B3',breaks_x = seq(25,40,1))
CDF_plot <- function(data,title,breaks_x = NULL,breaks_y = NULL){
p <- ggplot(data,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1) +
xlab('Amount of I/O workload') + ylab('') +
scale_y_continuous(breaks = seq(0,1,0.1)) +
scale_x_continuous(breaks = breaks_x) +
guides(color = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
# legend.position = 'top',
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p, width = 8, height = 6, dpi = 100)
}
CDF_plot(ioC,'fig2A3',breaks_x = seq(25,40,1))
??legend.position
??legend
CDF_plot <- function(data,title,breaks_x = NULL,breaks_y = NULL){
p <- ggplot(data,aes(acct_9023O,color = factor(shTime))) + stat_ecdf(size = 1) +
xlab('Amount of I/O workload') + ylab('') +
scale_y_continuous(breaks = seq(0,1,0.1)) +
scale_x_continuous(breaks = breaks_x) +
guides(color = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 26,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 22),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 24),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0,1),legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p, width = 8, height = 6, dpi = 100)
}
CDF_plot(ioC,'fig2A3',breaks_x = seq(25,40,1))
CDF_plot(ioC,'fig2A3',breaks_x = seq(25,40,1))
CDF_plot(ioTS,'fig2B3',breaks_x = seq(25,40,1))
sum(ioTS$acct_9023[ioTS$shTime <= 1])
sum(ioTS$acct_9023[ioTS$shTime > 1 & ioTS$shTime <= 3])
sum(ioTS$acct_9023[ioTS$shTime > 3])
sum(ioC$acct_9023[ioC$shTime <= 1])
sum(ioC$acct_9023[ioC$shTime > 1 & ioC$shTime <= 3])
sum(ioC$acct_9023[ioC$shTime > 3])
tableX(ioC$shTime)
mean(ioTS$acct_9023[ioTS$shTime <= 1])
mean(ioTS$acct_9023[ioTS$shTime > 1 & ioTS$shTime <= 3])
mean(ioTS$acct_9023[ioTS$shTime > 3])
mean(ioC$acct_9023[ioC$shTime <= 1])
mean(ioC$acct_9023[ioC$shTime > 1 & ioC$shTime <= 3])
mean(ioC$acct_9023[ioC$shTime > 3])
mean(ioTS$acct_9023[ioTS$shTime <= 1])/12
mean(ioTS$acct_9023[ioTS$shTime > 1 & ioTS$shTime <= 3])/12
mean(ioTS$acct_9023[ioTS$shTime > 3])/12
mean(ioC$acct_9023)
mean(ioTS$acct_9023)
quantileX(ioTS$acct_9023)
quantileX(ioC$acct_9023)
mean(ioTS$acct_9023[ioTS$shTime <= 1])
mean(ioTS$acct_9023[ioTS$shTime > 1 & ioTS$shTime <= 3])
mean(ioTS$acct_9023[ioTS$shTime > 3])
mean(ioTS$acct_9023)
mean(ioC$acct_9023)
source('D:/Git/attrid/sc16F3.R')
View(AFRRateC)
View(AFRRateTS)
a <- subset(AFRRateTS,sepRate > 5 & !(sepRate %in% c(40,45,50,55)))
View(a)
sum(a$fCount)/sum(a$count)
View(AFRRateTS)
source('D:/Git/attrid/sc16F4.R')
View(AFRflucC)
View(AFRflucTS)
divCV <- c(seq(0,5,0.5),max(disp$maxCV,na.rm = T))
disp$maxCVd <- cut(disp$maxCV,divCV,include.lowest = T)
disp$maxCVd <- gsub('^\\[|^\\(|,.*$','',disp$maxCVd)
# Merge
io <- merge(disp,cmdbio[,c('svr_asset_id','dClassN','warP')],
by.x = 'svrid',by.y = 'svr_asset_id')
f<- merge(disp,f[,c('svr_id','dClassN','warP')],
by.x = 'svrid',by.y = 'svr_id')
io$classA <- paste(io$dClassN,'(',io$warP,')',sep='')
ioC <- subset(io,dClassN == 'Nserv')
ioTS <- subset(io,dClassN == 'Sserv')
fC <- subset(f,dClassN == 'Nserv')
fTS <- subset(f,dClassN == 'Sserv')
#plot CDF
# p1 <- ggplot(io,aes(x = maxCV,color = classA)) + stat_ecdf(size = 1) + xlim(c(0,17))
# print(p1)
# ggsave(file=file.path(dir_data,'sc16','fig4A.eps'), plot=p1, width = 8, height = 6, dpi = 100)
#plot AFR
AFRflucTS <- ioAFR(ioTS,fTS,c('maxCVd'),12)
AFRflucC <- ioAFR(ioC,fC,c('maxCVd'))
AFRflucC$class <- 'Nserv'
AFRflucTS$class <- 'Sserv'
# pC <- AFR_plot(AFRflucC,'fig4B')
# pTS <- AFR_plot(AFRflucTS,'fig4C')
p <- AFR_plot(rbind(AFRflucC,AFRflucTS),'fig4D')
source('D:/Git/attrid/sc16F4.R')

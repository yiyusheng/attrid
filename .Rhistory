source(file.path('D:/Git/attrid','attr_config.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'attr_function.R'))
load(file.path(dir_data,'failIO.Rda'))
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;
svrid_cpl <- tapply(failIO$svrid,failIO$svrid,length)
svrid <- names(svrid_cpl)[svrid_cpl == 17280]
svrid[1]
svrid[2]
head(svrid)
names(svrid_cpl)[1]
svrid <- names(svrid_cpl)[as.numeric(svrid_cpl) == 17280]
head(svrid)
head(svrid,100)
x <- failIO$a902[failIO$svrid == 'TYSV07122446']
y <- fft(x);mag <- abs(y);f <- n*fs/N;
plot(f,mag)
plot(f[1:N/2],mag[1:N/2])
plot(x)
fs <- 1/300;N <- 5000;n <- 0:(N-1);t <- n/fs;
x <- failIO$a902[failIO$svrid == 'TYSV07122446'][10001:15000]
y <- fft(x);mag <- abs(y);f <- n*fs/N;
plot(f[1:N/2],mag[1:N/2])
plot(x)
x[x<1000] <- 0
y <- fft(x);mag <- abs(y);f <- n*fs/N;
plot(f[1:N/2],mag[1:N/2])
plot(x)
x <- failIO$a902[failIO$svrid == 'TYSV07122446']
x[x<1000] <- 0
y <- fft(x);mag <- abs(y);f <- n*fs/N;
plot(f[1:N/2],mag[1:N/2])
plot(x)
source('D:/Git/attrid/test.R')
head(svrid)
b <- as.numeric(svrid_cpl) == 17280
head(b)
b <- as.numeric(svrid_cpl)
head(b)
head(svrid_cpl)
svrid_cpl <- tapply(failIO$svrid,factor(failIO$svrid),length)
head(svrid_cpl)
svrid <- names(svrid_cpl)[as.numeric(svrid_cpl) == 17280]
head(svrid)
failIOSample <- subset(failIO,svrid %in% sample(100,svrid))
failIOSample <- factorX(failIOSample)
sample(100,svrid)
str(sample)
failIOSample <- factorX(subset(failIO,svrid %in% sample(svrid,100)))
svrid_cpl[1:1000]
a <- svrid_cpl[names(svrid_cpl) %in% svrid]
a
quantile(svrid_cpl,seq(0,1,0.1))
failIOSample <- factorX(subset(failIO,svrid %in% sample(svrid,10)))
17280*10
172800-162720
svrid_full <- names(svrid_cpl)[as.numeric(svrid_cpl) == 17280]
failIOSample <- factorX(subset(failIO,svrid %in% sample(svrid_full,10)))
failIOSample <- factorX(subset(failIO,svrid %in% sample(svrid_full,100)))
save(failIOSample,file = file.path(dir_data,'failIOSample.Rda'))
# 测试用
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/attrid','attr_config.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'attr_function.R'))
#@@@ LOAD DATA @@@#
# load(file.path(dir_data,'load_ftr_attrid.Rda'))
############################################################################################
# # T1. data1中三字段分位点
# load(file.path(dir_data,'data1Quan.Rda'))
# q902 <- data.frame(quan = seq(0,100,0.1),value = q902,cl = 'Read')
# q903 <- data.frame(quan = seq(0,100,0.1),value = q903,cl = 'write')
# q999 <- data.frame(quan = seq(0,100,0.1),value = q999,cl = 'Util')
# q <- rbind(q902,q903,q999)
# row.names(q) <- NULL
# ggplot(q,aes(x = quan,y = log2(value),group = cl,color = cl)) + geom_line()
# T2. 频谱图
load(file.path(dir_data,'failIOSample.Rda'))
failIO <- failIOSample
x <- failIO$a902[failIO$svrid == 'TYSV07122446']
x <- failIO$a902[failIOSample$svrid == 'TYSV07122446']
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[1]]
plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[2]];plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[3]];plot(x)
plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[4]]
plot(x)
-
-
)
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[4]]
y <- fft(x);mag <- abs(y);f <- n*fs/N;
plot(f[1:N/2],mag[1:N/2])
fs <- 300;N <- 17280;n <- 0:(N-1);t <- n/fs;
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[4]]
y <- fft(x);mag <- abs(y);f <- n*fs/N;
plot(f[1:N/2],mag[1:N/2])
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;
summary(t)
head(t)
summary(mag)
f[mag == max(mag)]
a <- data.frame(mag,f)
a <- a[order(a$mag),]
View(a)
a <- a[order(a$mag,decreasing = T),]
View(a)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[4]]   #数据选择
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;              #参数设置
y <- fft(x);mag <- abs(y);f <- n*fs/N;
y <- fft(x);mag <- abs(y);f <- n*fs/N;
df <- data.frame(mag,f);df <- df[order(df$mag),]
View(df)
plot(df)
source('D:/Git/attrid/test.R', echo=TRUE)
plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[5]]   #数据选择
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;              #参数设置
y <- fft(x);mag <- abs(y);f <- n*fs/N;
df <- data.frame(mag,f);df <- df[order(df$mag),]
plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[6]]   #数据选择
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;              #参数设置
y <- fft(x);mag <- abs(y);f <- n*fs/N;
df <- data.frame(mag,f);df <- df[order(df$mag),]
plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[10]]   #数据选择
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;              #参数设置
y <- fft(x);mag <- abs(y);f <- n*fs/N;
df <- data.frame(mag,f);df <- df[order(df$mag),]
plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[100]]   #数据选择
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;              #参数设置
y <- fft(x);mag <- abs(y);f <- n*fs/N;
df <- data.frame(mag,f);df <- df[order(df$mag),]
plot(x)
x <- failIO$a902[failIO$svrid == levels(failIO$svrid)[150]]   #数据选择
fs <- 1/300;N <- 17280;n <- 0:(N-1);t <- n/fs;              #参数设置
y <- fft(x);mag <- abs(y);f <- n*fs/N;
df <- data.frame(mag,f);df <- df[order(df$mag),]
plot(x)
# 测试用
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/attrid','attr_config.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'attr_function.R'))
#@@@ LOAD DATA @@@#
a <- data.frame(a = seq(1,100),b = letters)
a <- data.frame(a = seq(1,100),b = sample(100,letters))
sample(100,letters)
str(sample)
sample(letters,100)
sample(letters,100,replace = T)
a <- data.frame(a = seq(1,100),b = sample(letters,100,replace = T))
a <- data.frame(a = seq(1,100),b = sample(letters,100,replace = T))
b <- as.numeric(tapply(a$a,a$b,function(x){
data.frame(l = length(a),m = mean(a))
}))
b4
b
a <- data.frame(a = seq(1,100),b = sample(letters,100,replace = T))
b <- as.numeric(tapply(a$a,factor(a$b),function(x){
data.frame(l = length(a),m = mean(a))
}))
warnings()
a$a
b <- as.numeric(tapply(a$a,factor(a$b),function(x){
data.frame(l = length(a))
}))
b
View(a)
b <- tapply(a$a,factor(a$b),function(x){
data.frame(l = length(a))
})
b <- tapply(a$a,factor(a$b),function(x){
length(a)
})
b
a$a
b <- tapply(a$a,factor(a$b),function(x){
mean(a)
})
mean(a$a)
b <- tapply(a$a,factor(a$b),function(x){
a
})
b
b[1]
b <- tapply(a$a,factor(a$b),function(x){
x
})
b <- tapply(a$a,factor(a$b),function(x){
length(x)
})
b
b <- tapply(a$a,factor(a$b),function(x){
list(length(x),mean(x))
})
b
b
?foreach
library('doParallel')
?foreach
source('D:/Git/attrid/test.R', echo=TRUE)
View(R)
R[,2:10] <- 1/R[,2:10]/86400
View(R)
load(file.path(dir_data,'fourierTrans.Rda'))
frT <- ioReturn
frT[2:10] <- 1/frT[2:10]/86400
names(frT) <- c('svrid',
'F902fst','F902snd','F902thd','A902fst','A902snd','A902thd','A902Sum',
'F903fst','F903snd','F903thd','A903fst','A903snd','A903thd','A903Sum',
'F999fst','F999snd','F999thd','A999fst','A999snd','A999thd','A999Sum')
R1 <- subset(frT,svrid %in% R$svrid)
View(R)
View(`R1`)
row.names(R1) <- NULL
View(`R1`)
a <- R[1,]
a1 <- R1[1,]
a
a1
a1[2:22] <- 1/a1[2:22]/86400
a
a
a1
load(file.path(dir_data,'fourierTransMoreThanHalf.Rda'))
R1 <- subset(frT,svrid %in% R$svrid)
View(`R1`)
View(R)
R[,1]
R[,2]
R[1,]
R1[1,]
1/R1[1,2:22]/86400
summary(frT)
ggplot(frT,aes(x = F902fst)) + geom_histogram()
ggplot(frT,aes(x = log2(F902fst))) + geom_histogram()
ggplot(frT,aes(x = F902fst)) + geom_histogram(binwidth = 1)
source('D:/Git/attrid/Periodicity_io.R', echo=TRUE)
source('D:/Git/attrid/Periodicity_io.R', echo=TRUE)
source('D:/Git/attrid/Periodicity_io.R', echo=TRUE)
frT$dClass <- cmdb$dClass[match(frT$svrid,cmdb$svr_asset_id)]
frT$classs <- 'Normal'
frT$Class[frT$svrid %in% data.f$svr_id] <- 'Failure'
source('D:/Git/attrid/Periodicity_io.R', echo=TRUE)
source('D:/Git/attrid/test.R', echo=TRUE)
source('D:/Git/attrid/test.R')
source('D:/Git/attrid/test.R')
R[1,]
R1[1,]
source('D:/Git/attrid/Periodicity_io.R')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
tableX(round(tmpP1.cmdb$Prd902))
a <- tableX(round(tmpP1.cmdb$Prd902))
View(a)
frT$dClass <- cmdb$dClass[match(frT$svrid,cmdb$svr_asset_id)]
frT$classs <- 'Normal'
frT$class[frT$svrid %in% data.f$svr_id] <- 'Failure'
ggplot(frT,aes(x = F902fst,fill = class)) + geom_histogram(binwidth = 1)
tmpP1.f <- subset(tmp.f,,c('ip','svr_id','dClass','dev_class_id','failShiptime'))
tmpP1.cmdb <- subset(tmp.cmdb,,c('svr_asset_id','dev_class_id','ip','shiptimeToLeft','dClass'))
tmpP1.cmdb$Prd902 <- round(frT$F902fst[match(tmp.cmdb$svr_asset_id,frT$svrid)])
tmpP1.f$Prd902 <- round(frT$F902fst[match(tmp.f$svr_id,frT$svrid)])
Prd902 <- AFR_attr(tmpP1.f,tmpP1.cmdb,'Prd902',6,1)
source(file.path(dir_code,'AFR_io_function.R'))
Prd902 <- AFR_attr(tmpP1.f,tmpP1.cmdb,'Prd902',6,1)
View(Prd902)
table.P1f <- tableX(tmpP1.f$Prd902)
table.P1cmdb <- tableX(tmpP1.cmdb$Prd902)
View(table.P1f)
table.P1f <- tableX(tmpP1.f$Prd902)
table.P1cmdb <- tableX(tmpP1.cmdb$Prd902)
table.P1cmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
View(table.P1cmdb)
table.P1cmdb$rate <- table.P1cmdb$fcount/table.P1cmdb$count
Tf <- tableX(tmpP1.f$Prd902)
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
Tcmdb$rate <- table.P1cmdb$fcount/table.P1cmdb$count
Tcmdb$item <- levels(Tcmdb$item)[Tcmdb$item]
Tcmdb$item <- as.numeric(levels(Tcmdb$item)[Tcmdb$item])
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
Tcmdb$rate <- table.P1cmdb$fcount/table.P1cmdb$count
Tcmdb$item <- as.numeric(levels(Tcmdb$item)[Tcmdb$item])
ggplot(Tcmdb,aes(x = item,y = rate)) + geom_bar(stat = 'identity')
View(Tcmdb)
ggplot(subset(Tcmdb,count > 100),aes(x = item,y = rate)) + geom_bar(stat = 'identity')
View(Tcmdb)
Tcmdb <- Tcmdb[order(tCmdb$rate),]
Tcmdb <- Tcmdb[order(Tcmdb$rate),]
View(Tcmdb)
tmpP1.f <- subset(tmp.f,dClass == 'C',c('ip','svr_id','dClass','dev_class_id','failShiptime'))
tmpP1.cmdb <- subset(tmp.cmdb,dClass == 'C',c('svr_asset_id','dev_class_id','ip','shiptimeToLeft','dClass'))
tmpP1.cmdb$Prd902 <- round(frT$F902fst[match(tmp.cmdb$svr_asset_id,frT$svrid)])
tmpP1.f$Prd902 <- round(frT$F902fst[match(tmp.f$svr_id,frT$svrid)])
Tf <- tableX(tmpP1.f$Prd902)
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
Tcmdb$rate <- table.P1cmdb$fcount/table.P1cmdb$count
Tcmdb$item <- as.numeric(levels(Tcmdb$item)[Tcmdb$item])
ggplot(subset(Tcmdb,count > 100),aes(x = item,y = rate)) + geom_bar(stat = 'identity')
frT$dClass <- cmdb$dClass[match(frT$svrid,cmdb$svr_asset_id)]
frT$classs <- 'Normal'
frT$class[frT$svrid %in% data.f$svr_id] <- 'Failure'
ggplot(frT,aes(x = F902fst,fill = class)) + geom_histogram(binwidth = 1)
tmpP1.f <- subset(tmp.f,dClass == 'C',c('ip','svr_id','dClass','dev_class_id','failShiptime'))
tmpP1.cmdb <- subset(tmp.cmdb,dClass == 'C',c('svr_asset_id','dev_class_id','ip','shiptimeToLeft','dClass'))
tmpP1.cmdb$Prd902 <- round(frT$F902fst[match(tmp.cmdb$svr_asset_id,frT$svrid)])
tmpP1.f$Prd902 <- round(frT$F902fst[match(tmp.f$svr_id,frT$svrid)])
Tf <- tableX(tmpP1.f$Prd902)
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
Tcmdb$rate <- table.P1cmdb$fcount/table.P1cmdb$count
Tcmdb$item <- as.numeric(levels(Tcmdb$item)[Tcmdb$item])
ggplot(subset(Tcmdb,count > 100),aes(x = item,y = rate)) + geom_bar(stat = 'identity')
frT$dClass <- cmdb$dClass[match(frT$svrid,cmdb$svr_asset_id)]
frT$classs <- 'Normal'
frT$class[frT$svrid %in% data.f$svr_id] <- 'Failure'
ggplot(frT,aes(x = F902fst,fill = class)) + geom_histogram(binwidth = 1)
tmpP1.f <- subset(tmp.f,dClass == 'C',c('ip','svr_id','dClass','dev_class_id','failShiptime'))
tmpP1.cmdb <- subset(tmp.cmdb,dClass == 'C',c('svr_asset_id','dev_class_id','ip','shiptimeToLeft','dClass'))
tmpP1.cmdb$Prd902 <- round(frT$F902fst[match(tmpP1.cmdb$svr_asset_id,frT$svrid)])
tmpP1.f$Prd902 <- round(frT$F902fst[match(tmpP1.f$svr_id,frT$svrid)])
Tf <- tableX(tmpP1.f$Prd902)
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
Tf <- tableX(tmpP1.f$Prd902)
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
Tcmdb$fcount <- 0
Tcmdb$fcount <- table.P1f$count[match(table.P1cmdb$item,table.P1f$item)]
Tcmdb$fcount <- table.P1f$count[match(Tcmdb$item,table.P1f$item)]
Tcmdb$rate <- table.P1cmdb$fcount/table.P1cmdb$count
Tcmdb$rate <- Tcmdb$fcount/Tcmdb$count
Tcmdb$item <- as.numeric(levels(Tcmdb$item)[Tcmdb$item])
ggplot(subset(Tcmdb,count > 100),aes(x = item,y = rate)) + geom_bar(stat = 'identity')
Tcmdb <- Tcmdb[order(Tcmdb$rate),]
View(Tcmdb)
View(Tcmdb)
load(file.path(dir_data,'failIO.Rda'))
frTIO <- subset(frT,svrid %in% failIO$svrid)
frTIO <- frTIO[order(frTIO$svrid),]
View(frTIO)
frTIO <- subset(frT,svrid %in% failIO$svrid,c('svrid','F902fst','A902fst','A902Sum','A903fst','F903fst','A903Sum'))
frTIO <- frTIO[order(frTIO$svrid),]
View(frTIO)
row.names(ftTIO) <- NULL
row.names(frTIO) <- NULL
ioplot <- function(sid){
data <- subset(failIO,svrid == sid)
data$fPoint <- 'Before Failure'
data$fPoint[data$timeNew > data.f$f_time[data.f$svr_id == svrid]] <- 'After Failure'
ggplot(data,aes(x = timeNew,y = a902,color = fPoint)) + geom_line() +
xlab('Time (days)') + ylab('Read (kb/s)') +
+ guides(color = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
}
frTIO <- subset(frT,svrid %in% failIO$svrid,c('svrid','F902fst','A902fst','A902Sum','A903fst','F903fst','A903Sum'))
frTIO <- frTIO[order(frTIO$svrid),]
row.names(frTIO) <- NULL
View(frTIO)
ioplot(frTIO$svrid[1])
ioplot(frTIO$svrid[1])
frTIO$svrid[1]
ioplot(as.character(frTIO$svrid[1]))
ioplot <- function(sid){
data <- subset(failIO,svrid == sid)
data$fPoint <- 'Before Failure'
data$fPoint[data$timeNew > data.f$f_time[data.f$svr_id == sid]] <- 'After Failure'
ggplot(data,aes(x = timeNew,y = a902,color = fPoint)) + geom_line() +
xlab('Time (days)') + ylab('Read (kb/s)') +
+ guides(color = guide_legend(title=NULL)) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
}
ioplot(as.character(frTIO$svrid[1]))
ioplot <- function(sid){
data <- subset(failIO,svrid == sid)
data$fPoint <- 'Before Failure'
data$fPoint[data$timeNew > data.f$f_time[data.f$svr_id == sid]] <- 'After Failure'
ggplot(data,aes(x = timeNew,y = a902,color = fPoint)) + geom_line() +
xlab('Time (days)') + ylab('Read (kb/s)') +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
}
ioplot(as.character(frTIO$svrid[1]))
ioplot(as.character(frTIO$svrid[6]))
ioplot(as.character(frTIO$svrid[24]))
ioplot(as.character(frTIO$svrid[46]))
ioplot(as.character(frTIO$svrid[87]))
a <- tableX(round(frT$F902fst))
View(a)
frTIO$A902rate <- frTIO$A902fst/frTIO$A902Sum
frTIO$A903rate <- frTIO$A903fst/frTIO$A903sum
frTIO <- subset(frT,svrid %in% failIO$svrid,
c('svrid','F902fst','A902fst','A902Sum','F903fst','A903fst','A903Sum'))
frTIO$A902rate <- frTIO$A902fst/frTIO$A902Sum
frTIO$A903rate <- frTIO$A903fst/frTIO$A903sum
frTIO$A903rate <- frTIO$A903fst/frTIO$A903Sum
View(frTIO)
frTIO <- frTIO[order(frTIO$A902rate,decreasing = T),]
View(frTIO)
?view
source('D:/Git/attrid/Periodicity_io.R')
source('D:/Git/attrid/Periodicity_io.R')
ioplot(as.character(frTIO$svrid[1]))
View(frTIO)
ioplot(as.character(frTIO$svrid[2]))
ioplot(as.character(frTIO$svrid[nrow(frTio)]))
ioplot(as.character(frTIO$svrid[nrow(frTIO)]))
ioplot(as.character(frTIO$svrid[nrow(frTIO)-1]))
ioplot(as.character(frTIO$svrid[nrow(frTIO)-100]))
ioplot <- function(sid){
data <- subset(failIO,svrid == sid)
data$fPoint <- 'Before Failure'
data$fPoint[data$timeNew > data.f$f_time[data.f$svr_id == sid]] <- 'After Failure'
ggplot(data,aes(x = timeNew,y = a902,color = fPoint)) + geom_line() +
xlab('Time (days)') + ylab('Read (kb/s)') +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
plot.title = element_text(size = 26, face = 'bold'),
legend.position = c(0,1),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5)))
data$a902
}
r <- ioplot(as.character(frTIO$svrid[nrow(frTIO)-100]))
head(r)
head(r,100)
max(r)
plot(r[r<50000])
a <- fft(r[r<50000])
a <- fft(r[r<50000])[2:(16990/2)]
which(max(a))
a
which(max(abs(a))
)
which(max(abs(a)))
which(max(abs(a)) == abs(a))
118/16900
1/118/16900/86400
1/(118/16900)/86400
frT$dClass <- cmdb$dClass[match(frT$svrid,cmdb$svr_asset_id)]
frT$classs <- 'Normal'
frT$class[frT$svrid %in% data.f$svr_id] <- 'Failure'
ggplot(frT,aes(x = F902fst,fill = class)) + geom_histogram(binwidth = 1)
tmpP1.f <- subset(tmp.f,dClass == 'C',c('ip','svr_id','dClass','dev_class_id','failShiptime'))
tmpP1.cmdb <- subset(tmp.cmdb,dClass == 'C',c('svr_asset_id','dev_class_id','ip','shiptimeToLeft','dClass'))
tmpP1.cmdb$Prd902 <- round(frT$F902fst[match(tmpP1.cmdb$svr_asset_id,frT$svrid)])
tmpP1.f$Prd902 <- round(frT$F902fst[match(tmpP1.f$svr_id,frT$svrid)])
Tf <- tableX(tmpP1.f$Prd902)
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- 0
Tcmdb$fcount <- Tf$count[match(Tcmdb$item,Tf$item)]
Tcmdb$rate <- Tcmdb$fcount/Tcmdb$count
Tcmdb$item <- as.numeric(levels(Tcmdb$item)[Tcmdb$item])
ggplot(subset(Tcmdb,count > 100),aes(x = item,y = rate)) + geom_bar(stat = 'identity')
frT$dClass <- cmdb$dClass[match(frT$svrid,cmdb$svr_asset_id)]
frT$classs <- 'Normal'
frT$class[frT$svrid %in% data.f$svr_id] <- 'Failure'
ggplot(frT,aes(x = F902fst,fill = class)) + geom_histogram(binwidth = 1)
tmpP1.f <- subset(tmp.f,dClass == 'TS',c('ip','svr_id','dClass','dev_class_id','failShiptime'))
tmpP1.cmdb <- subset(tmp.cmdb,dClass == 'TS',c('svr_asset_id','dev_class_id','ip','shiptimeToLeft','dClass'))
tmpP1.cmdb$Prd902 <- round(frT$F902fst[match(tmpP1.cmdb$svr_asset_id,frT$svrid)])
tmpP1.f$Prd902 <- round(frT$F902fst[match(tmpP1.f$svr_id,frT$svrid)])
Tf <- tableX(tmpP1.f$Prd902)
Tcmdb <- tableX(tmpP1.cmdb$Prd902)
Tcmdb$fcount <- 0
Tcmdb$fcount <- Tf$count[match(Tcmdb$item,Tf$item)]
Tcmdb$rate <- Tcmdb$fcount/Tcmdb$count
Tcmdb$item <- as.numeric(levels(Tcmdb$item)[Tcmdb$item])
ggplot(subset(Tcmdb,count > 100),aes(x = item,y = rate)) + geom_bar(stat = 'identity')
View(frT)
frTIO$rEqw <- frTIO$F902fst == frTIO$F903fst
tableX(frTIO$rEqw)
r <- ioplot(as.character(frTIO$svrid[995]))
r <- ioplot(as.character(frTIO$svrid[995]))
r <- ioplot(as.character(frTIO$svrid[995]))
r <- ioplot(as.character(frTIO$svrid[1]))

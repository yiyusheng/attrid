cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.5),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(10)),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(0,10)),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(c(0,10,0,0))),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = unit(c(0,10,0,0))),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = unit(c(0,2,0,0),'cm')),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,margin = margin(10,20,30,40)),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = -0.9),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 2),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 1),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
AFR_plot <- function(cm,title){
cm1 <- subset(cm,sepRate < 100)
p1 <- ggplot(cm1,aes(x = sepRate,y = AFR)) +
geom_bar(stat = 'identity') +
xlab('Rate of Write Amount in Total Amount (%)') + ylab('Annual Failure Rate (%)') +
# scale_y_continuous(breaks = seq(0.6,3,0.2)) +
# scale_y_continuous(limits = c(0.4,2.8),oob = rescale_none,breaks = seq(0.4,2.8,0.2)) +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_continuous(breaks = seq(0,3,0.5)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted'),
#           panel.grid.major.x = element_blank(),
plot.title = element_text(size = 28,vjust = 1),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 24,hjust = 0.5),
# axis.text.x = element_text(angle = 40,margin = margin(15)),
axis.title = element_text(size = 26),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
ggsave(file=file.path(dir_data,'sc16',paste(title,'.eps',sep='')), plot=p1, width = 8, height = 6, dpi = 100)
}
pTS <- AFR_plot(subset(AFRRateTSN),'fig3C')
# Test
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/SMART','SMARTConfig.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'SMARTFunc.R'))
load(file.path(dir_data,'diskInfo.Rda'))
head(diskInfo)
a <- subset(diskInfo,!is.na(svrid))
summary(diskInfo)
source('D:/Git/SMART/diskInfo.R')
source('D:/Git/SMART/diskInfo.R')
summary(diskInfo)
a <- subset(diskInfo,is.na(svrid))
a <- factorX(a)
summary(a)
diskInfoValid <- subset(diskInfo,!is.na(svrid))
save(diskInfoValid,file = file.path(dir_data,'diskInfoValid.Rda'))
summary(diskInfoValid)

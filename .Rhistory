View(perioLabel)
perioLabel$lab[1][1]
perioLabel$lab[1]
substring(perioLabel$lab,1,1)
View(perioLabel)
perioLabel$lab902 <- as.numeric(substring(perioLabel$lab,1,1))
perioLabel$lab903 <- as.numeric(substring(perioLabel$lab,2,2))
perioLabel$lab999 <- as.numeric(substring(perioLabel$lab,3,3))
perioLabel$lab <- NULL
perioLabel$svrid <- svridFIO[1:nrow(perioLabel)]
perioLabel <- perioLabel[c('svrid','lab902','lab903','lab999')]
perioLabel$svrid <- factor(svridFIO[1:nrow(perioLabel)])
perioLabel <- perioLabel[c('svrid','lab902','lab903','lab999')]
ftrNeed <- c('svrid','F902fst','A902fst','A902Sum',
'F903fst','A903fst','A903Sum',
'F999fst','A999fst','A999Sum')
PL <- merge(perioLabel,frT[,ftrNeed],by = svrid,all.x = T)
PL <- merge(perioLabel,frT[,ftrNeed],by = 'svrid',all.x = T)
View(PL)
delrow <- is.na(PL[,4:ncol(PL)])
?all
?any
delrow <- apply(is.na(PL[,4:ncol(PL)]),1,any)
delrow
PL <- PL[!delrow,]
svmtrain
require('e1071')
?e1071
?svm
View(PL)
?svm
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum, data = PL,
cross = 10,type = 'C-classification',kernel = 'radial basis')
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum, data = PL,
cross = 10,type = 'C-classification',kernel = 'RBF')
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum, data = PL,
cross = 10,type = 'C-classification')
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum, data = PL,
cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
pred1
?table
table(cmdb$dept_id,cmdb$dev_class_id)
a <- table(cmdb$dept_id,cmdb$dev_class_id)
a <- data.frame(table(cmdb$dept_id,cmdb$dev_class_id))
View(a)
?fitted
summary(m1)
str(m1)
all.equal(m1$fitted,pred1)
table(pred1,PL$lab902)
table(pred1)
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum + A902fst/A902Sum, data = PL,
cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum + A902fst/A902Sum + abs(F902fst-roundF902fst) < 0.01, data = PL,
cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum + A902fst/A902Sum + abs(F902fst-round(F902fst)) < 0.01, data = PL,
cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~ F902fst + A902fst + A902Sum + A902fst/A902Sum + (abs(F902fst-round(F902fst)) < 0.01), data = PL,
cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum +
(A902fst/A902Sum) +
(abs(F902fst-round(F902fst)) < 0.01) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum +
(A902fst/A902Sum),
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
#             A902fst +
A902Sum +
(A902fst/A902Sum),
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
#             A902fst +
#             A902Sum +
(A902fst/A902Sum),
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
#             A902fst +
A902Sum,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
#             A902fst +
A902Sum +
(A902fst/A902Sum),
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum +
(A902fst/A902Sum),
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum +
(A902fst/A902Sum)+
(abs(F902fst-round(F902fst)) < 0.01) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
(A902fst/A902Sum),
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum +
(A902fst/A902Sum) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
#             A902fst +
A902Sum +
(A902fst/A902Sum) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst +
#             A902Sum +
(A902fst/A902Sum) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
A902fst +
A902Sum +
(A902fst/A902Sum) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
#             A902fst +
#             A902Sum +
(A902fst/A902Sum) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
A902fst,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
#             A902fst +
A902Sum,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
#             A902fst +
#             A902Sum +
(A902fst/A902Sum) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
#             A902fst +
A902Sum +
(A902fst/A902Sum) ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
#             A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
#             F902fst +
A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
require('e1071')
m1 <- svm(lab902 ~
#             F902fst +
A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
r <- data.frame(svrid = PL$svrid,pred = pred1,lab = PL$lab902)
View(r)
rE <- subset(r,pred != lab)
View(rE)
file.copy(file.path(dir_data,FailIOCoase,paste(rE$svrid,'.png',sep=''),file.path(dir_data,'tmp'))
)
file.copy(file.path(dir_data,'FailIOCoarse',paste(rE$svrid,'.png',sep='')),file.path(dir_data,'tmp'))
rE1 <- subset(r,pred == 1 & lab == 0)
rE2 <- subset(r,pred == 0 & lab == 1)
file.copy(file.path(dir_data,'FailIOCoarse',paste(rE1$svrid,'.png',sep='')),file.path(dir_data,'tmp1'))
file.copy(file.path(dir_data,'FailIOCoarse',paste(rE2$svrid,'.png',sep='')),file.path(dir_data,'tmp2'))
View(rE1)
View(rE2)
source('D:/Git/attrid/plotFailIOCoarse.R')
lapply(sort(names(plot902List)),function(x){
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.png',sep = '')), pointsize =12, width = 1280, height = 768, quality = 200, bg = "white", res = NA, restoreConsole = TRUE)
#   p <- multiplot(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])),
#                  plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])),
#                  plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])),cols = 2)
print(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa903',paste(x,'.png',sep = '')), pointsize =12, width = 1280, height = 768, quality = 200, bg = "white", res = NA, restoreConsole = TRUE)
print(plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])))
dev.off()
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa999',paste(x,'.png',sep = '')), pointsize =12, width = 1280, height = 768, quality = 200, bg = "white", res = NA, restoreConsole = TRUE)
print(plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
})
file.rename(file.path(dir_data,'FailIOCoarse','FailIOa902',nm$name),
file.path(dir_data,'FailIOCoarse','FailIOa902',nm$newName))
file.rename(file.path(dir_data,'FailIOCoarse','FailIOa903',nm$name),
file.path(dir_data,'FailIOCoarse','FailIOa903',nm$newName))
file.rename(file.path(dir_data,'FailIOCoarse','FailIOa999',nm$name),
file.path(dir_data,'FailIOCoarse','FailIOa999',nm$newName))
nm <- data.frame(name = paste(sort(names(plot902List)),'.png',sep = ''))
nm$newName <- paste(1:nrow(nm),nm$name,sep='_')
nm <- data.frame(name = paste(sort(names(plot902List)),'.png',sep = ''))
nm$newName <- paste(1:nrow(nm),nm$name,sep='_')
file.rename(file.path(dir_data,'FailIOCoarse','FailIOa902',nm$name),
file.path(dir_data,'FailIOCoarse','FailIOa902',nm$newName))
file.rename(file.path(dir_data,'FailIOCoarse','FailIOa903',nm$name),
file.path(dir_data,'FailIOCoarse','FailIOa903',nm$newName))
file.rename(file.path(dir_data,'FailIOCoarse','FailIOa999',nm$name),
file.path(dir_data,'FailIOCoarse','FailIOa999',nm$newName))
?jpeg
x <- names(plot902List)[1]
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.png',sep = '')), width = 1280, height = 768, bg = "white", res = NA, restoreConsole = TRUE)
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.jpg',sep = '')), width = 1280, height = 768, bg = "white", res = NA, restoreConsole = TRUE)
#   p <- multiplot(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])),
#                  plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])),
#                  plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])),cols = 2)
print(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.jpg',sep = '')), width = 800, height = 600, bg = "white", res = NA, restoreConsole = TRUE)
#   p <- multiplot(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])),
#                  plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])),
#                  plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])),cols = 2)
print(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.jpg',sep = '')), quality = 10,width = 800, height = 600, bg = "white", res = NA, restoreConsole = TRUE)
#   p <- multiplot(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])),
#                  plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])),
#                  plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])),cols = 2)
print(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.jpg',sep = '')), quality = 30,width = 800, height = 600, bg = "white", res = NA, restoreConsole = TRUE)
#   p <- multiplot(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])),
#                  plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])),
#                  plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])),cols = 2)
print(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.jpg',sep = '')),width = 800, height = 600, bg = "white", res = NA, restoreConsole = TRUE)
#   p <- multiplot(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])),
#                  plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])),
#                  plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])),cols = 2)
print(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
x <- names(plot902List)[14]
jpeg(filename = file.path(dir_data,'FailIOCoarse','FailIOa902',paste(x,'.jpg',sep = '')),width = 800, height = 600, bg = "white", res = NA, restoreConsole = TRUE)
#   p <- multiplot(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])),
#                  plot999List[[x]] + ylab('Utile(%)') + ggtitle(names(plot902List[x])),
#                  plot903List[[x]] + ylab('Write(kB/s)') + ggtitle(names(plot902List[x])),cols = 2)
print(plot902List[[x]] + ylab('Read(kB/s)') + ggtitle(names(plot902List[x])))
dev.off()
# 使用SVM学习已标记数据的周期性，并计算预测精度
rm(list = ls())
#@@@ CONFIGURE @@@#
source(file.path('D:/Git/attrid','attr_config.R'))
#@@@ Function @@@#
source('D:/Git/R_Function/Rfun.R')
source(file.path(dir_code,'attr_function.R'))
#@@@ LOAD DATA @@@#
load(file.path(dir_data,'load_ftr_attrid.Rda'))
load(file.path(dir_data,'fourierTransMThH.Rda'))
load(file.path(dir_data,'failIOsvrid.Rda'))
perioLabel <- read.csv(file.path(dir_data,'failIOLabel902'),header = F,colClasses = 'character')
load(file.path(dir_data,'Perio_smp500Svrid.Rda'))
View(nm)
View(perioLabel)
View(perioLabel)
str(perioLabel)
?read.csv
str(sapply)
readline <- function(str){
n <- nchar(str)
sapply(1:n,function(x){
as.numeric(substring(str,x,x))
})
}
readline(perioLabel[1])
readline(perioLabel[1,])
a <- readline(perioLabel[1,])
sapply(1:34,function(x){
readline(perioLabel[x,])
})
readline <- function(str){
n <- nchar(str)
r <- sapply(1:n,function(x){
as.numeric(substring(str,x,x))
})
t(r)
}
# P1.整理数据
sapply(1:34,function(x){
readline(perioLabel[x,])
})
readline <- function(str){
n <- nchar(str)
r <- sapply(1:n,function(x){
as.numeric(substring(str,x,x))
})
}
# P1.整理数据
PL <- sapply(1:34,function(x){
readline(perioLabel[x,])
})
unlist(PL)
PL <- data.frame(svrid = gsub('.png','',nm$svrid),
lab = unlist(sapply(1:34,function(x){
readline(perioLabel[x,])
}))
)
PL <- data.frame(svrid = gsub('.png','',nm$svrid),
lab = unlist(sapply(1:34,function(x){
readline(perioLabel[x,]))
}))
PL <- data.frame(svrid = gsub('.png','',nm$svrid),
lab = unlist(sapply(1:34,function(x){
readline(perioLabel[x,])
}))
)
PL <- data.frame(svrid = gsub('.png','',nm$svrid),
lab = unlist(sapply(1:34,function(x){
readline(perioLabel[x,])
})))
gsub('.png','',nm$svrid)
View(nm)
PL <- data.frame(svrid = gsub('.png','',nm$name),
lab = unlist(sapply(1:34,function(x){
readline(perioLabel[x,])
})))
PL <- data.frame(svrid = gsub('.png','',nm$name[nm$smp != 0]),
lab = unlist(sapply(1:34,function(x){
readline(perioLabel[x,])
})))
View(PL)
PL <- data.frame(svrid = gsub('.png','',nm$name[nm$smp != 0]),
lab902 = unlist(sapply(1:34,function(x){
readline(perioLabel[x,])
})))
ftrNeed <- c('svrid','F902fst','A902fst','A902Sum',
'F903fst','A903fst','A903Sum',
'F999fst','A999fst','A999Sum')
PL <- merge(PL,frT[,ftrNeed],by = 'svrid',all.x = T)
delrow <- apply(is.na(PL[,4:ncol(PL)]),1,any)
PL <- PL[!delrow,]
View(PL)
require('e1071')
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
PL <- data.frame(svrid = gsub('.png','',nm$name[nm$smp != 0]),
lab902 = unlist(sapply(1:34,function(x){
readline(perioLabel[x,])
})))
PL$lab902[PL$lab902 == 2] <- 0
ftrNeed <- c('svrid','F902fst','A902fst','A902Sum',
'F903fst','A903fst','A903Sum',
'F999fst','A999fst','A999Sum')
PL <- merge(PL,frT[,ftrNeed],by = 'svrid',all.x = T)
delrow <- apply(is.na(PL[,4:ncol(PL)]),1,any)
PL <- PL[!delrow,]
View(PL)
require('e1071')
m1 <- svm(lab902 ~
F902fst +
A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
#             A902fst +
A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- svm(lab902 ~
F902fst +
A902fst,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
pred1 <- fitted(m1)
table(pred1,PL$lab902)
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial",
cost = 10^(-2:2),gamma=10^(-6:6))
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial",
cost = 10^(-2:2),gamma=10^(-6:-2))
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial",
cost = 10^(-2:2),gamma = 0.01)
10^(-2:2)
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum ,
data = PL, cross = 10,type = 'C-classification',kernel = "radial")
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum , data = PL,
#                cross = 10,type = 'C-classification',kernel = "radial",
cost = 10^(-2:2),gamma = 0.01)
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum , data = PL,
type = 'C-classification',kernel = "radial",
cost = 10^(-2:2),gamma = 0.01)
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum , data = PL,
#                cross = 10,type = 'C-classification',kernel = "radial",
cost = 10^(-2:2),gamma = 0.01)
summary(m1)
m1 <- tune.svm(lab902 ~ F902fst + A902fst + A902Sum , data = PL,
#                cross = 10,type = 'C-classification',kernel = "radial",
cost = 10^(-2:2),gamma = 10^(-6:6))
summary(m1)
name_arr<-c("a","b")
value_arr<-c(1,2,3,4,5,6)
l <- list(name_arr[1] = value_arr[1:3])
eval(parse(text = sprintf('%s = value_arr[1:3]',name_arr[1])))
eval(parse(text = sprintf('list(%s = value_arr[1:3])',name_arr[1])))
if (c(3,7) > 0) print("hello")
a <- data.frame(a = seq(0,10),b = rep(1,10))
a <- data.frame(a = seq(0,10),b = rep(1,11))
a
library(ggplot2)
View(a)
ggplot(a,aes(x = a,y = b)) + geom_bar()
ggplot(a,aes(x = a,y = b)) + geom_bar(stat = 'identity')
ggplot(a,aes(x = a,y = b)) + geom_bar(stat = 'identity',width = 1)
ggplot(a,aes(x = a,y = b)) + geom_bar(stat = 'identity',width = 0.001)
ggplot(a,aes(x = a,y = b)) + geom_bar(stat = 'identity',width = 0.01)
ggplot(a,aes(x = a,y = b)) + geom_bar(stat = 'identity',width = 0.1)
ggplot(a,aes(x = a,y = b)) + geom_bar(stat = 'identity',width = 1/nrow(a))

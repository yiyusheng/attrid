data.f$fsTimeN <- cut(data.f$failShiptime,c(0,1/2,1:7),include.lowest = T)
data.f$fsTimeN <- gsub('^\\[|^\\(|,.*$','',data.f$fsTimeN)
# S2. Compute online time
cmdb$shiptimeToLeft <- floor(lowerTime - cmdb$use_time)
cmdb$shiptimeToRight <- floor(upperTime - cmdb$use_time)
units(cmdb$shiptimeToLeft) <- 'days'
units(cmdb$shiptimeToRight) <- 'days'
cmdb$shiptimeToLeft <- as.numeric(cmdb$shiptimeToLeft)/365
cmdb$shiptimeToRight <- as.numeric(cmdb$shiptimeToRight)/365
# a wrong setting
# cmdb$shTime <- floor(cmdb$shiptimeToLeft + (1/12))
cmdb$shTime <- floor(cmdb$shiptimeToRight)
cmdb$shTimeN <- cut(cmdb$shiptimeToRight,c(0,1/2,1:7),include.lowest = T)
cmdb$shTimeN <- gsub('^\\[|^\\(|,.*$','',cmdb$shTimeN)
# S3. Label for each server
cmdb$dClass <- ''
class_C <- 'C1'
class_B <- c('B5','B6','B1')
class_TS <- c('TS1','TS3','TS4','TS5','TS6')
cmdb$dClass[cmdb$dev_class_id %in% class_C] <- 'C'
cmdb$dClass[cmdb$dev_class_id %in% class_B] <- 'B'
cmdb$dClass[cmdb$dev_class_id %in% class_TS] <- 'TS'
cmdb$diskNum <- disk_ip$disk_c[match(cmdb$ip,disk_ip$ip)]
summary(cmdb$diskNum)
# Containing 13 failed server
cmdbio <- subset(cmdb,svr_asset_id %in% mean_io$svrid &
dev_class_id %in% c(class_C,class_TS) &
shiptimeToRight > 0)
cmdbio <- subset(cmdb,svr_asset_id %in% mean_io$svrid &
dev_class_id %in% c(class_C,class_TS) &
shiptimeToRight > 0 & !is.na(diskNum))
source('~/Code/R/attrid/dataPrepareAFR.R')
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.cmdb$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.cmdb$svr_asset_id,tmp.cmdb$svr_asset_id)]
load(file.path(dir_data,flistFile))
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
# tmp.cmdb$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.cmdb$svr_asset_id,tmp.cmdb$svr_asset_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_asset_id,tmp.cmdb$svr_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
View(`[<-.result`)
tmp.cmdb <- facotorX(tmp.cmdb)
tmp.cmdb <- factorX(tmp.cmdb)
df <- tmp.f
dc <- tmp.cmdb
colC <- c('svr_asset_id','dev_class_id','ip','raid',
'shiptimeToLeft','shiptimeToRight','dClass','shTimeQu')
virtD <- sapply(1:100,function(i){
r <- rep(tmp.cmdb[i,],tmp.cmdb$diskNum[i])
r$diskID <- 1:nrow(r)
r
})
virtD <- sapply(1:100,function(i){
r <- rep(tmp.cmdb[i,],tmp.cmdb$diskNum[i])
r$diskID <- 1:length(r)
r
})
virtD <- sapply(1:100,function(i){
r <- rep(tmp.cmdb[i,],tmp.cmdb$diskNum[i])
r$diskID <- 1:length(r)
r
})
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f <- factorX(tmp.f)
tmp.cmdb <- factorX(tmp.cmdb)
a  <- subset(tmp.f, svr_id == 'TYSV12122459')
View(a)
a  <- subset(tmp.f, svr_id == 'TYSV09030476-L')
View(a)
source('~/Code/R/attrid/dataPrepareAFR.R')
a  <- subset(tmp.f, svr_id == 'TYSV09030476-L')
View(a)
a  <- subset(data.fMore, svr_id == 'TYSV09030476-L')
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f <- factorX(tmp.f)
tmp.cmdb <- factorX(tmp.cmdb)
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
virtDC <- virt_disk(tmp.f,tmp.cmdb)
virtDC$survTime <- cut3mon(as.numeric(difftime(virtDC$f_time,virtDC$use_time,tz = 'UTC',units = 'days'))/365)
tmp.df <- subset(virtDC,status == 'failed')
tmp.dcmdb <- subset(virtDC,status == 'working')
cm1 <- AFR_attr_notime(tmp.df,tmp.dcmdb,'survTime','survTime',1,dev = 'C')
cm2 <- AFR_attr_notime(tmp.df,tmp.dcmdb,'survTime','survTime',12,dev = 'TS')
cm <- rbind(cm1,cm2)
cm <- factorX(subset(cm,!is.na(AFR)))
cm <- classExchg(cm)
cm <- subset(cm,item < 6)
p <- AFR_plot(cm,'fig1')
View(cm)
View(cm1)
cm1$AFR[cm1$item == 1.75] <- 4.13443
cm <- rbind(cm1,cm2)
cm <- factorX(subset(cm,!is.na(AFR)))
cm <- classExchg(cm)
cm <- subset(cm,item < 6)
p <- AFR_plot(cm,'fig1')
source('~/Code/R/attrid/sc16F1.R')
source('~/Code/R/attrid/sc16F1.R')
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f <- factorX(tmp.f)
tmp.cmdb <- factorX(tmp.cmdb)
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f <- factorX(tmp.f)
tmp.cmdb <- factorX(tmp.cmdb)
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime)
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
at <- 'shTimeQu'
cm1 <- AFR_attr_notime(tmp.f,tmp.cmdb,at,at,1,dev = 'C')
cm2 <- AFR_attr_notime(tmp.f,tmp.cmdb,at,at,12,dev = 'TS')
View(cm1)
source('~/Code/R/attrid/sc16F1.R')
source('~/Code/R/attrid/plotTest.R')
source('~/Code/R/attrid/plotTest.R')
View(data)
data = data.frame(xp = rep(seq(1,5),10),y = rnorm(50))
data = data.frame(xp = rep(seq(1,5),10),yp = rnorm(50))
data = data.frame(xp = rep(seq(1,5),10),yp = rnorm(50))
ggplot(data,aes(xp,yp)) + stat_summary(fun.data = mean_cl_normal()) +
geom_smooth(method = 'lm', formular = data$yp~data$xp)
install.packages('Hmisc')
ggplot(data,aes(xp,yp)) + stat_summary(fun.data = mean_cl_normal()) +
geom_smooth(method = 'lm', formular = data$yp~data$xp)
ggplot(data,aes(x = xp,y = yp)) + stat_summary(fun.data = mean_cl_normal()) +
geom_smooth(method = 'lm', formular = data$yp~data$xp)
data = data.frame(x.plot = rep(seq(1,5),10),y.plot = rnorm(50))
ggplot(data,aes(x.plot,y.plot))+stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm',formula=y~x)
ggplot(data,aes(x.plot,y.plot))+stat_summary(fun.data=mean_cl_normal)
data = data.frame(x.plot = rep(seq(1,100),10),y.plot = rnorm(1000))
ggplot(data,aes(x.plot,y.plot))+stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm',formula=y~x)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = y ~ x) +
geom_point()
p
?lm
?substitute
df = data.frame(x = c(1:100))
df$y = 2 + 5 * df$x + rnorm(100, sd = 40)
df$class = rep(1:2,50)
ggplot(data = df, aes(x = x, y = y, label=y)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
?lm
?stat_smooth
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
View(df)
source('~/Code/R/attrid/plotTest.R')
rm(list = ls())
source('head.R')
library(ggplot2)
rm(list = ls())
source('head.R')
library(ggplot2)
####################################
# P1. Add regression line
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
ggplot(df,aes(x = x, y = y)) + geom_bar(stat = 'identity') +
geom_smooth(method = 'lm')
lmFit <- lm(df$y ~ df$x)
summary(lmFit)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 1)
lmFit <- lm(df$y ~ df$x)
summary(lmFit)
predict(lmFit,c(1,2,3))
predict(lmFit,10
)
predict(lmFit)
a <- predict(lmFit)
predict(lmFit,data.frame(x = 1:10))
predict(lmFit,data.frame(x = -50:50))
predict(lmFit,data.frame(x = -50:49))
predict(lmFit,train_x = c(1,2,3))
predict(lmFit,data.frame(train_x = c(1,2,3)))
predict(lmFit,data.frame(x = 1:10),se.fit = T)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
predict(lmFit,data.frame(x = seq(1,10,1)),se.fit = T)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 1)
lmFit <- lm(df$y ~ df$x)
new <- data.frame(train_x = c(1,2,3))
x <- rnorm(15)
y <- x + rnorm(15)
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
predict(lmFit,new)
seq(-3, 3, 0.5)
x <- rnorm(15)
y <- x + rnorm(15)
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
predict(lm(df$x~df$y),new)
x <- c(1:100)
y <- 2 + 3 * x + rnorm(100, sd = 1)
lmFit <- lm(y ~ x)
new <- data.frame(x = c(1:10))
predict(lm(x~y),new)
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(x~y),new,se.fit = T)
x <- c(1:100)
y <- 2 + 3 * x + rnorm(100, sd = 1)
new <- data.frame(x = c(1:10))
predict(lm(x~y),new,se.fit = T)
x <- rnorm(15)
y <- x + rnorm(15)
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
seq(-3, 3, 0.5)
x <- c(1:100)
y <- 2 + 3 * x + rnorm(100, sd = 1)
new <- data.frame(x = c(1:10))
predict(lm(y~x),new,se.fit = T)
x <- c(1:100)
y <- 2 + 3 * x + rnorm(100, sd = 1)
lmFit <- lm(y ~ x)
new <- data.frame(x = c(1,2,3))
predict(lmFit,new)
source('~/Code/R/attrid/sc16F1.R')
View(cm1)
View(cm2)
fit1 <- lm(cm1$AFR[1:12] ~ cm1$item[1:12])
cmp1 <- predict(fit1,cm1$item)
cmp1 <- predict(fit1,cm1$item,se.fit = T)
cmp1 <- predict(fit1,cm1$item)
cmp1 <- predict(fit1,data.frame(x = cm1$item))
summary(fit1)
cmp1 <- predict(fit1)
cmp1
cm1$AFR[1:12]
cmp1 <- predict(fit1,data.frame(item = cm1$item))
cmp1 <- predict(fit1,cm1)
x1 <- cm1$item[1:12];y1 <- cm1$AFR[1:12]
x2 <- cm2$item[1:12];y2 <- cm2$AFR[1:12]
fit1 <- lm(y1~x1)
fit2 <- lm(y2~x2)
cmp1 <- predict(fit1,data.frame(x1 = cm1$item)
)
x1 <- cm1$item[1:12];y1 <- cm1$AFR[1:12]
x2 <- cm2$item[1:12];y2 <- cm2$AFR[1:12]
cmp1 <- predict(lm(y1~x1),data.frame(x1 = cm1$item))
cmp2 <- predict(lm(y2~x2,data.frame(x2 = cm2$item)))
cmp2 <- predict(lm(y2~x2),data.frame(x2 = cm2$item))
cm1$AFRpredict <- predict(lm(y1~x1),data.frame(x1 = cm1$item))
cm2$AFRpredict <- predict(lm(y2~x2),data.frame(x2 = cm2$item))
View(cm1)
View(cm2)
cm1$AFRdiff <- cm1$AFR - cm1$AFRpredict
cm2$AFRdiff <- cm2$AFR - cm2$AFRpredict
View(cm1)
View(cm2)
source('~/Code/R/attrid/sc16F1.R')
View(cm)
source('~/Code/R/attrid/sc16F1.R')
View(cm)
View(cm)
source('~/Code/R/attrid/sc16F1Func.R')
source('~/Code/R/attrid/sc16F1Func.R')
p2 <- AFR_plot_warranty(cm,'fig1Warranty')
title <- 'fig1A'
cm <- subset(cm,item >= 3)
p1 <- ggplot(subset(cm,class == 'Nserv'),aes(x = as.character(item),y = AFRdiff,color = 'green')) +
geom_bar(stat = 'identity') +
xlab('Disk Age (years)') + ylab('Annual Failure Rate (%)') +
# scale_x_continuous(breaks = floor(min(cm$item)):ceiling(max(cm$item))) +
scale_y_continuous(breaks = seq(floor(min(cm$AFR)),8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_line(size = 0.4),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted', size = 1),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 26),
axis.title = element_text(size = 26),
axis.text.x = element_text(angle = 40,hjust = 1),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
p1
p1 <- ggplot(subset(cm,class == 'Nserv'),aes(x = as.character(item),y = AFRdiff,fill = 'green')) +
geom_bar(stat = 'identity') +
xlab('Disk Age (years)') + ylab('Annual Failure Rate (%)') +
# scale_x_continuous(breaks = floor(min(cm$item)):ceiling(max(cm$item))) +
scale_y_continuous(breaks = seq(floor(min(cm$AFR)),8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_line(size = 0.4),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted', size = 1),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 26),
axis.title = element_text(size = 26),
axis.text.x = element_text(angle = 40,hjust = 1),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
p2 <- ggplot(subset(cm,class == 'Sserv'),aes(x = as.character(item),y = AFRdiff,fill = 'Red')) +
geom_bar(stat = 'identity',position = 'dodge') +
xlab('Disk Age (years)') + ylab('Annual Failure Rate (%)') +
# scale_x_continuous(breaks = floor(min(cm$item)):ceiling(max(cm$item))) +
scale_y_continuous(breaks = seq(floor(min(cm$AFR)),8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_line(size = 0.4),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted', size = 1),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 26),
axis.title = element_text(size = 26),
axis.text.x = element_text(angle = 40,hjust = 1),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p2)
p1 <- ggplot(subset(cm,class == 'Nserv'),aes(x = as.character(item),y = AFRdiff)) +
geom_bar(stat = 'identity') +
xlab('Disk Age (years)') + ylab('Annual Failure Rate (%)') +
# scale_x_continuous(breaks = floor(min(cm$item)):ceiling(max(cm$item))) +
scale_y_continuous(breaks = seq(floor(min(cm$AFR)),8,1)) +
guides(fill = guide_legend(title=NULL)) +
theme_bw() +
theme(panel.background = element_rect(color = 'black'),
panel.grid.minor = element_line(size = 0.4),
panel.grid.major = element_line(colour = 'grey', linetype = 'dotted', size = 1),
#           panel.grid.major.x = element_blank(),
plot.title = element_blank(),
axis.line = element_line(color = 'black'),
axis.text = element_text(size = 26),
axis.title = element_text(size = 26),
axis.text.x = element_text(angle = 40,hjust = 1),
legend.key.width = unit(1.5,units = 'line'),
legend.key.height = unit(1.5,units = 'line'),
legend.text = element_text(size = 26),
legend.position = c(0.05,0.95),
legend.justification = c(0,1),
legend.background = element_rect(fill = alpha('grey',0.5))
)
print(p1)
View(cm)
source('~/Code/R/attrid/sc16F1Func.R')
cm <- rbind(cm1,cm2)
cm <- factorX(subset(cm,!is.na(AFR)))
cm <- classExchg(cm)
cm <- subset(cm,item < 6)
p2 <- AFR_plot_warranty(cm,'fig1Warranty')
source('~/Code/R/attrid/sc16F1Func.R')
p2 <- AFR_plot_warranty(cm,'fig1Warranty')
source('~/Code/R/attrid/sc16F1Func.R')
p2 <- AFR_plot_warranty(cm,'fig1Warranty')
source('~/Code/R/attrid/sc16F1.R')
p2 <- AFR_plot_warranty(cm,'fig1Warranty')
source('~/Code/R/attrid/sc16F1Func.R')
source('~/Code/R/attrid/sc16F1.R')
source('~/Code/R/attrid/sc16F1.R')
source('~/Code/R/attrid/sc16F1.R')
# Plot for sc16
rm(list = ls())
#@@@ CONFIGURE @@@#
source('head.R')
require(ggplot2)
#@@@ Function @@@#
source(file.path(dir_code,'attr_function.R'))
source(file.path(dir_code,'sc16F1Func.R'))
#####################################################################################################
# S1. plot correlation between disk age and AFR
Qu <- 1 # cut by each quauters
flistFile <- 'dataPrepareAFR13.Rda'
# flistFile <- 'dataPrepareAFR1406_1407.Rda'
load(file.path(dir_data,flistFile))
tmp.f <- factorX(tmp.f)
tmp.cmdb <- factorX(tmp.cmdb)
tmp.f$fsTimeQu <- cut3mon(tmp.f$failShiptime,4)
tmp.f$diskNum <- tmp.cmdb$diskNum[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.cmdb$shTimeQu <- cut3mon(tmp.cmdb$shiptimeToRight,4)
tmp.cmdb$shTimeQuGuassian <- cut3mon(tmp.cmdb$shiptimeToRight,4.25)
tmp.f$shTimeQu <- tmp.cmdb$shTimeQu[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
tmp.f$shTimeQuGuassian <- tmp.cmdb$shTimeQuGuassian[match(tmp.f$svr_id,tmp.cmdb$svr_asset_id)]
at <- 'shTimeQu'
cm1A <- AFR_attr_notime(tmp.f,tmp.cmdb,at,at,1,dev = 'C')
cm2A <- AFR_attr_notime(tmp.f,tmp.cmdb,at,at,12,dev = 'TS')
cm1A$AFR[cm1A$item == 5] <- 4.13443
cmA <- rbind(cm1A,cm2A)
cmA <- factorX(subset(cmA,!is.na(AFR)))
cmA <- classExchg(cmA)
cmA <- subset(cmA,item < 6)
View(cmA)
at <- 'shTimeQuGuassian'
cm1B <- AFR_attr_notime(tmp.f,tmp.cmdb,at,at,1,dev = 'C')
cm1B$AFR[cm1B$item == 5] <- 4.13443
x1 <- cm1B$item[1:12];y1 <- cm1B$AFR[1:12]
cm1B$AFRpredict <- predict(lm(y1~x1),data.frame(x1 = cm1B$item))
cm1B$AFRdiff <- cm1B$AFR - cm1B$AFRpredict
cm2B <- AFR_attr_notime(tmp.f,tmp.cmdb,at,at,12,dev = 'TS')
x2 <- cm2B$item[1:12];y2 <- cm2B$AFR[1:12]
cm2B$AFRpredict <- predict(lm(y2~x2),data.frame(x2 = cm2B$item))
cm2B$AFRdiff <- cm2B$AFR - cm2B$AFRpredict
cmB <- rbind(cm1B,cm2B)
cmB <- factorX(subset(cmB,!is.na(AFR)))
cmB <- classExchg(cmB)
cmB <- subset(cmB,item >=3 & item <= 4)
View(cmB)
p1 <- AFR_plot(cmA,'fig1')
p2 <- AFR_plot_warranty(cmB,'fig1Warranty')
View(cmB)
View(cmB)

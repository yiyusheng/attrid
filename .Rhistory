source('~/Code/R/TC_koubei/data_load.R')
source('~/Code/R/TC_koubei/data_load.R')
fname <- list.files(dir_data)
fname
shop_info <- read.csv(file = file.path(dir_data,'shop_info.txt'))
shop_info <- read.csv(file = file.path(dir_data,'datasets','shop_info.txt'))
shop_info <- read.csv(file = file.path(dir_data,'datasets','shop_info.txt'),header = F)
shop_info <- read.csv(file = file.path(dir_data,'datasets','shop_info.txt'),
col.names = c('shop_id','city_name','location_id','per_pay','sorce',
'comment_cnt','shop_level','cate_1_name','cate_2_name','cate_3_name'))
shop_info <- read.csv(file = file.path(dir_data,'datasets','shop_info.txt'),header = F,
col.names = c('shop_id','city_name','location_id','per_pay','sorce',
'comment_cnt','shop_level','cate_1_name','cate_2_name','cate_3_name'))
user_pay <- read.csv(file = file.path(dir_data,'datasets','user_pay.txt'),header = F,
col.names = c('user_id','shop_id','time_stamp'))
source('~/Code/R/TC_koubei/data_load.R')
osFlag = Sys.info()[1] == 'Windows'
cur_dir <- dirname(sys.frame(1)$ofile)
sys.frame
sys.frame(1)
?sys.frame
sys.frame(0)
sys.frame(0)$ofile
a <- sys.frame(0)
getSrcDirectory()
getSrcDirectory(a)
rm(list = ls())
lapply(sys.frames(),function(x) x$ofile)
?source
source('~/Code/R/attrid/test1.R')
source('~/Code/R/attrid/test1.R')
rm(list = ls())
source('head.R')
source('iopsFunc.R')
dir_iops <- '/home/yiyusheng/Data/tencProcess/mergePartSvrid'
dir_ten <- '/home/yiyusheng/Data/tencProcess'
fname <- list.files(dir_iops)
# fname <- 'd1.Rda'
load(file.path(dir_data,'iops.Rda'))
load(file.path(dir_data,'sdSet.Rda'))
View(sdSet)
# S2. add use_time for each disk
load(file.path(dir_ten,'diskInfo0902.Rda'))
sdSet$use_time <- svrInfo0902$use_time[match(sdSet$sid,paste('s',svrInfo0902$svr_id,sep=''))]
sdSet <- subset(sdSet,!is.na(use_time))
View(sdSet)
View(svrInfo0902)
load(file.path(dir_ten,'failRecord_diskParse.Rda'))
load(file.path(dir_data,'failRecord_1407-1506.Rda'))
load(file.path(dir_ten,'failRecord_1407-1506.Rda'))
View(failRecord)
View(failRecordWithDev)
View(failRecordWithoutDev)
load(file.path(dir_data,'locate_fail.Rda'))
View(ext_disk)
View(failRecord)
View(pos_disk)
rm(list = ls())
source('head.R')
source('iopsFunc.R')
dir_iops <- '/home/yiyusheng/Data/tencProcess/mergePartSvrid'
dir_ten <- '/home/yiyusheng/Data/tencProcess'
fname <- list.files(dir_iops)
load(file.path(dir_data,'iops.Rda'))
View(sta_time_ratio)
rm(list = ls())
source('head.R')
source('iopsFunc.R')
dir_iops <- '/home/yiyusheng/Data/tencProcess/mergePartSvrid'
dir_ten <- '/home/yiyusheng/Data/tencProcess'
fname <- list.files(dir_iops)
# fname <- 'd1.Rda'
load(file.path(dir_data,'sdSet.Rda'))
load(file.path(dir_ten,'diskInfo0902.Rda'))
sdSet$use_time <- svrInfo0902$use_time[match(sdSet$sid,paste('s',svrInfo0902$svr_id,sep=''))]
sdSet <- subset(sdSet,!is.na(use_time))
# S3.add failed time. similar to sc16F1Func.R::virt_disk
load(file.path(dir_ten,'failRecord_diskParse.Rda'))
load(file.path(dir_ten,'failRecord_1407-1506.Rda'))
load(file.path(dir_data,'locate_fail.Rda'))
sdSet$f_time <- failRecord$f_time[match(sdSet$sid,failRecord$svr_id)]
summary(sdSet$f_time)
sdSet$f_time <- failRecord$f_time[match(sdSet$sid,paste('s',failRecord$svr_id,sep=''))]
summary(sdSet$f_time)
names(fr) <- c('svrid','ftime')
fr <- failRecord[,c('svr_id','f_time')]
names(fr) <- c('svrid','ftime')
fr$svrid <- paste('s',fr$svrid,sep='')
frSplit <- split(fr,fr$svrid)
head(names(frSplit))
sdSplit <- split(sdSet,sdSet$sid)
s <- names(frSplit)[100]
s
f <- frSplit[[s]]
c <- sdSplit[[s]]
View(f)
View(c)
len.f <- nrow(f)
len.c <- nrow(c)
load(file.path(dir_data,'sdSet.Rda'))
sdSet$sid <- gsub('s','',sdSet$sid)
sdSet$did <- gsub('d','',sdSet$did)
load(file.path(dir_data,'sdSet.Rda'))
sdSet$sid <- factor(gsub('s','',sdSet$sid))
sdSet$did <- factor(gsub('d','',sdSet$did))
load(file.path(dir_data,'sdSet.Rda'))
sdSet$sid <- factor(gsub('s','',sdSet$sid))
sdSet$did <- as.numeric(gsub('d','',sdSet$did))
table(sdSet$did)
sdSet$did[is.na(sdSet$did)] <- 0
table(sdSet$did)
load(file.path(dir_data,'sdSet.Rda'))
sdSet$sid <- factor(as.numeric(gsub('s','',sdSet$sid)))
sdSet$did <- as.numeric(gsub('d','',sdSet$did))
sdSet$did[is.na(sdSet$did)] <- 0
sdSet$use_time <- svrInfo0902$use_time[match(sdSet$sid,svrInfo0902$svr_id)]
sdSet <- subset(sdSet,!is.na(use_time))
sdSplit <- split(sdSet,sdSet$sid)
s <- names(frSplit)[1000]
s
frSplit <- split(fr,fr$svrid)
sdSplit <- split(sdSet,sdSet$sid)
s <- names(frSplit)[1000]
load(file.path(dir_ten,'failRecord_1407-1506.Rda'))
fr <- failRecord[,c('svr_id','f_time')]
names(fr) <- c('svrid','ftime')
frSplit <- split(fr,fr$svrid)
s <- names(frSplit)
s <- names(frSplit)[1000]
s
f <- frSplit[[s]]
c <- sdSplit[[s]]
View(f)
View(c)
len.f <- nrow(f)
len.c <- nrow(c)
max.c <- max(c$diskidx)
max.c <- max(c$did)
tmp <- c[rep(len.c,len.f),]
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$f_time
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
f
tmp$use_time <- f$f_time
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
f$f_time
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
View(c)
c$status[1:len.f] <- 'failed'
View(c)
len.f
sdSet$status <- 'working'
sdSplit <- split(sdSet,sdSet$sid)
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
View(c)
sdSet$f_time <- as.p('2015-07-01')
sdSplit <- split(sdSet,sdSet$sid)
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
View(c)
c$f_time[1:len.f] <- f$f_time
f$f_time
c$f_time[1:len.f] <- f$ftime
View(c)
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
if(len.f == 0 | len.c == 0) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
Q
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
if(len.f == NULL | len.c == NULL) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
frSplit <- frSplit[1:100]
sdSplit <- sdSplit[names(sdSplit) %in% names(frSplit)]
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%.0f',s))
if(is.null(len.f) | is.null(len.c)) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%s',s))
if(is.null(len.f) | is.null(len.c)) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
frSplit <- split(fr,fr$svrid)[1:1000]
sdSplit <- split(sdSet,sdSet$sid)[1:1000]
r <- lapply(names(frSplit)[1:1000],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%s\n',s))
if(is.null(len.f) | is.null(len.c)) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
r1 <- do.call(rbind,r)
View(r1)
a <- subset(sdSet,sid == 10)
View(a)
source('~/Code/R/attrid/disk_data_hr.R')
s <- '10924'
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
View(c)
is.null(len.f) | is.null(len.c)
is.null(len.f) | is.null(len.c) | len.f == 0 | len.c == 0
source('~/Code/R/attrid/disk_data_hr.R')
1 + 1
s <- '1'
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
is.null(len.f) | is.null(len.c) | len.f == 0 | len.c == 0
len.f == 0
len.c == 0
interSplit <- intersect(names(frSplit),names(sdSplit))
source('~/Code/R/attrid/disk_data_hr.R')
s <- '10924'
f <- frSplit[[s]]
c <- sdSplit[[s]]
s in interSplit
s %in% interSplit
a <- subset(sdSplit,sid == s)
sdSet <- factorX(sdSet)
fr <- factorX(fr)
frSplit <- split(fr,fr$svrid)
sdSplit <- split(sdSet,sdSet$sid)
interSplit <- intersect(names(frSplit),names(sdSplit))
frSplit <- frSplit[names(frSplit) %in% interSplit]
sdSplit <- sdSplit[names(sdSplit) %in% interSplit]
s
s %in% interSplit
source('~/Code/R/attrid/disk_data_hr.R')
r <- lapply(names(frSplit),function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%s\n',s))
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
virtDisk <- do.call(rbind,r)
View(virtDisk)
View(fr)
source('../dataLoadforDiskAnalysis/loadFunc.R')
fr <- dedupTime(fr,3,'svrid')
Q
save(virtDisk,file = file.path(dir_data,'virtDisk.Rda'))
save(fr,sdSet,virtDisk,file = file.path(dir_data,'virtDisk.Rda'))
rm(list = ls())
source('head.R')
load(file.path(dir_data,'virtDisk.Rda'))
source('../dataLoadforDiskAnalysis/loadFunc.R')
fr <- dedupTime(fr,3,'svrid')
data.flist <- fr
dayDup <- 3
attr <- 'svrid'
data.flist <- data.flist[order(data.flist[[attr]],data.flist$f_time),]
names(fr) <- c('svrid','f_time')
a <- dedupTime(fr,3,'svrid')
data.flist <- data.flist[order(data.flist[[attr]],data.flist$f_time),]
data.flist <- fr
data.flist <- data.flist[order(data.flist[[attr]],data.flist$f_time),]
data.flist[[attr]] <- as.character(data.flist[[attr]])
delset <- numeric()
pSvrid <- data.flist[[attr]][1]
pFtime <- data.flist$f_time[1]
i = 2
curSvrid <- data.flist[[attr]][i]
curFtime <- data.flist$f_time[i]
curSvrid == pSvrid
curSvrid == pSvrid
curSvrid != pSvrid
for (i in 2:nrow(data.flist)){
curSvrid <- data.flist[[attr]][i]
curFtime <- data.flist$f_time[i]
if (curSvrid == pSvrid &
as.numeric(difftime(curFtime,pFtime,tz = 'UTC',units = 'days')) > dayDup){
pFtime <- curFtime
next
} else if(curSvrid == pSvrid &
as.numeric(difftime(curFtime,pFtime,tz = 'UTC',units = 'days')) <= dayDup){
delset <- c(delset,i)
} else if(curSvrid != pSvrid){
pFtime <- curFtime
pSvrid <- curSvrid
next
}
}
data.flist <- data.flist[-delset,]
delset
load(file.path(dir_ten,'failRecord_1407-1506.Rda'))
save(fvirtDisk,file = file.path(dir_data,'virtDisk.Rda'))
save(virtDisk,file = file.path(dir_data,'virtDisk.Rda'))
View(virtDisk)
summary(virtDisk)
names(virtDisk) <- NULL
load('file.path(dir_data,'virtDisk.Rda')')
load(file.path(dir_data,'virtDisk.Rda'))
row.names(virtDisk) <- NULL
virtDisk <- virtDisk[order(virtDisk$sid,virtDisk$did),]
View(virtDisk)
source('~/Code/R/attrid/disk_data_hr.R')

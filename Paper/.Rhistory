list[data_pred,data_pred_dcast,data_na] <- fill_missing_data(data_pred,k)
i = 1464
ori_value <- as.numeric(data_pred_dcast[i,2:(k+1)])
meanD <- mean(ori_value[!data_na[i,2:(k+1)]])
sdD <- sd(ori_value[!data_na[i,2:(k+1)]])
data_na[i,2:(k+1)]
ori_value[!data_na[i,2:(k+1)]]
sd(5)
sd(c(5,6))
is.na(sd)
sd
is.na(sdD)
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
a < c(4,23,5,34,6)
a <- c(4,23,5,34,6)
sort(a)
order(a)
a[order(a)]
a[order(a)[1:2]]
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
data_pred <- extract_data(shop_pay,k,test_start,teset_end)
list[data_pred,data_pred_dcast,data_na] <- fill_missing_data(data_pred,k)
data_pred <- smp_tuningB(data_pred_dcast,data_na,k,pa)
pa <- 1.05
data_pred <- smp_tuningB(data_pred_dcast,data_na,k,pa)
data_pred <- expand_data(data_pred,k)
data_comp <- add_real(data_pred,test_start,teset_end)
error <- mean(data_comp$ms)
cat(sprintf('pa:%s\t\tError:%.8f\n',
pa,error))
rm(list = ls())
source('head.R')
source('gen_result_last_week_Func.R')
source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda')) #smp_aggra <- gen_smp_aggra(shop_pay,test_start,k)
# load(file.path(dir_data,'volt_limit_set.Rda'))
flag_gen <- 2 #If generate the result
title <- '0211b.csv'  #file title
k <- 7  #days to extract as samples
volt_limit_weight <- 1.05
active_weight <- 1.1
last_k <- 1 #number of period used to adjust result
x <- ifelse(flag_gen == 1,test_end <- as.p('2016-11-15'),
ifelse(flag_gen == 0,test_end <- as.p('2016-11-01'),test_end <- as.p('2016-10-31')))
test_start <- test_end - 14*86400
data_pred <- extract_data(shop_pay,k,test_start,teset_end)
list[data_pred,data_pred_dcast,data_na] <- fill_missing_data(data_pred,k)
data_pred <- smp_tuningB(data_pred_dcast,data_na,k,pa)
# data_pred <- smp_tuningC(data_pred_dcast,smp_aggra,k,volt_limit_weight,last_k)
data_pred <- expand_data(data_pred,k)
data_comp <- add_real(data_pred,test_start,teset_end)
error <- mean(data_comp$ms)
cat(sprintf('pa:%s\t\tError:%.8f\n',
pa,error))
pa <- 1.05
data_pred <- extract_data(shop_pay,k,test_start,teset_end)
list[data_pred,data_pred_dcast,data_na] <- fill_missing_data(data_pred,k)
data_pred <- smp_tuningB(data_pred_dcast,data_na,k,pa)
# data_pred <- smp_tuningC(data_pred_dcast,smp_aggra,k,volt_limit_weight,last_k)
data_pred <- expand_data(data_pred,k)
data_comp <- add_real(data_pred,test_start,teset_end)
error <- mean(data_comp$ms)
cat(sprintf('pa:%s\t\tError:%.8f\n',
pa,error))
aggr_ms <- data.frame(shop_id = factor(data_comp$shop_id),
value  = as.numeric(tapply(data_comp$ms,data_comp$shop_id,mean))
aggr_ms$pa <- pa
return(aggr_ms)
return(data_comp)
}else{
data_pred$value[data_pred$uni_time > as.p('2016-11-10') & data_pred$uni_time < as.p('2016-11-13')] <-
data_pred$value[data_pred$uni_time > as.p('2016-11-10') & data_pred$uni_time < as.p('2016-11-13')]*active_weight
data_pred$value <- round(data_pred$value)
r <- gen_csv(data_pred,title)
cat(sprintf('Length:%d\tAll positive:%s\tAll numeric:%s',nrow(r),all(r >= 0),all(!is.na(r))))
return(r)
}
}
# r <- main(1.05)
# r <- lapply(seq(0.01,2.3,0.01),main)
r <- lapply(seq(0.01,2.3,0.01),main)
r1 <- do.call(rbind,r)
r2 <- dcast(shop_id~pa,data = r1,value.var = 'mean')
r2$shop_id <- fct2num(r2$shop_id)
r3 <- data.frame(shop_id = r2$shop_id,
vt = seq(0.01,2.3,0.01)[apply(r2,1,function(x)order[x][1:10]) - 1])
r3 <- rbind(r3,c(1824,1))
r3 <- r3[order(r3$shop_id),]
volt_limit_set <- r3$vt
save(volt_limit_set,file = file.path(dir_data,'volt_limit_set.Rda'))
aggr_ms <- data.frame(shop_id = factor(data_comp$shop_id),
value  = as.numeric(tapply(data_comp$ms,data_comp$shop_id,mean)))
data_comp$shop_id <- factor(data_comp$shop_id)
aggr_ms <- data.frame(shop_id = factor(data_comp$shop_id),
value  = as.numeric(tapply(data_comp$ms,data_comp$shop_id,mean)))
data_comp <- add_real(data_pred,test_start,teset_end)
error <- mean(data_comp$ms)
cat(sprintf('pa:%s\t\tError:%.8f\n',
pa,error))
data_comp$shop_id <- factor(data_comp$shop_id)
aggr_ms <- data.frame(shop_id = levels(data_comp$shop_id),
value  = as.numeric(tapply(data_comp$ms,data_comp$shop_id,mean)))
aggr_ms$pa <- pa
View(aggr_ms)
source('D:/Git/TC_koubei/gen_result_last_week.R')
r3 <- data.frame(shop_id = r2$shop_id,
vt = seq(0.01,2.3,0.01)[apply(r2,1,function(x)order[x][1:10]) - 1])
x <- r2[1,]
order[x][1:10])
order(x)[1:10]
View(r2)
order(x[2:ncol(r2)])
source('D:/Git/TC_koubei/gen_result_last_week.R')
r3 <- data.frame(shop_id = r2$shop_id,
vt = seq(0.01,2.3,0.01)[apply(r2,1,function(x)order(x[2:ncol(r2)])[1:10])])
2:ncol(r2)
x
x <- r2[1,]
order(x[2:ncol(r2)])[1
order(x[2:ncol(r2)])[1:10])]
apply(r2,1,function(x)order(x[2:ncol(r2)]))[1:10]
View(r2)
min(r2[1])
min(r2[1,])
seq(0.01,2.3,0.01)[apply(r2,1,function(x)order(x[2:ncol(r2)]))[1:10]]
r2$1.41[1]
r2[1,]
r3 <- data.frame(shop_id = r2$shop_id,
vt = seq(0.01,2.3,0.01)[apply(r2,1,function(x)order(x[2:ncol(r2)]))[1:10]])
r3 <- data.frame(shop_id = r2$shop_id,
vt = seq(0.01,2.3,0.01)[apply(r2,1,function(x)order(x[2:ncol(r2)]))[1:5]])
save(r2,file = file.path(dir_data,'volt_limit_set.Rda'))
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
rm(list = ls())
source('head.R')
source('gen_result_last_week_Func.R')
source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda')) #s
tdf <- smp_aggra[[1]]
df <- smp_aggra[[1]]
View(df)
ggplot(df, aes(x=uni_time, y=smp_mean)) +
geom_errorbar(aes(ymin=smp_mean-smp_sd, ymax=smp_mean+smp_sd), width=.1) +
geom_line() + geom_point()
ggplot(df, aes(x=uni_time, y=smp_mean, group = 1)) +
geom_errorbar(aes(ymin=smp_mean-smp_sd, ymax=smp_mean+smp_sd), width=.1) +
geom_line() + geom_point()
ggplot(df, aes(x=1:nrow(df), y=smp_mean, group = 1)) +
geom_errorbar(aes(ymin=smp_mean-smp_sd, ymax=smp_mean+smp_sd), width=.1) +
geom_line() + geom_point()
i = 1
ggplot(df, aes(x=1:nrow(df), y=smp_mean, group = 1)) +
geom_errorbar(aes(ymin=smp_mean-smp_sd, ymax=smp_mean+smp_sd), width=.1) +
geom_line() + geom_point() + xlab('weeks') + ylab('mean') + ggtitle(i)
source('D:/Git/TC_koubei/base.R')
source('D:/Git/TC_koubei/base.R')
source('D:/Git/TC_koubei/base.R')
x <- lapply(1:2000,plot_week_aggra)
source('D:/Git/TC_koubei/base.R')
x <- lapply(1:2000,plot_week_aggra)
df <- smp_aggra[[3]]
View(df)
source('D:/Git/TC_koubei/base.R')
x <- lapply(1:2000,plot_week_aggra)
source('D:/Git/TC_koubei/base.R')
i = 1
cat(i)
df <- smp_aggra[[i]]
p <- ggplot(df, aes(x=1:nrow(df), y=smp_mean, group = 1)) +
geom_errorbar(aes(ymin=smp_mean-smp_sd, ymax=smp_mean+smp_sd), width=.1) +
geom_line() + geom_point() + xlab('weeks') + ylab('mean') + ggtitle(i)
ggsave(p,file = file.path(dir_data,'figure','week_aggra',paste(i,'.jpg',sep='')))
x <- lapply(1:2000,plot_week_aggra)
fit <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
require(forecast)
require('forecast')
install.packages('forecast')
install.packages('forecast')
install.packages('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages('ggplot2')
install.packages('ggplot2')
install.packages('forecast')
rm(list = ls())
source('head.R')
source('gen_result_last_week_Func.R')
source('base.R')
load(file.path(dir_data,'shop_pay.Rda'))
load(file.path(dir_data,'shop_info.Rda'))
load(file.path(dir_data,'smp_aggra.Rda')) #smp_aggra <- gen_smp_aggra(shop_pay,test_start,k)
# load(file.path(dir_data,'volt_limit_set.Rda'))
df <- smp_aggra[[1]]
fit <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
require(forecast)
fit <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
fc <- forecast.Arima(fit,h = length(2))
fc$mean
fc <- forecast.Arima(fit,h = 2)
fit_mean <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit,h = 2)
fit_sd <- auto.arima(df$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_sd <- forecast.Arima(fit,h = 2)
df$uni_time <- as.p(df$uni_time)
rbind(c(df$uni_time+86400*7,pred_mean[1],pred_sd[1]),c(df$uni_time+86400*14,pred_mean[2],pred_sd[1]))
max_ut <- max(df$uni_time)
rbind(c(max_ut+86400*7,pred_mean[1],pred_sd[1]),c(max_ut+86400*14,pred_mean[2],pred_sd[1]))
rbind(c(max_ut+86400*7,pred_mean$mean[1],pred_sd$mean[1]),
c(max_ut+86400*14,pred_mean$mean[1],pred_sd$mean[1]))
rbind(c(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[1],pred_sd$mean[1]),
c(as.POSIXct(max_ut+86400*14,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[2],pred_sd$mean[2]))
as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01')
c(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[1],pred_sd$mean[1])
pred_mean$mean[1]
c(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[1],pred_sd$mean[1])
as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01')
pred_mean$mean[1]
rbind(data.frame(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[1],pred_sd$mean[1]),
data.frame(as.POSIXct(max_ut+86400*14,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[2],pred_sd$mean[2]))
rbind(df,data.frame(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[1],pred_sd$mean[1]),
data.frame(as.POSIXct(max_ut+86400*14,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[2],pred_sd$mean[2]))
data.frame(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),pred_mean$mean[1],pred_sd$mean[1])
df,data.frame(uni_time = c(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),
as.POSIXct(max_ut+86400*14,tz = 'UTC',origin = '1970-01-01')),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
data.frame(uni_time = c(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),
as.POSIXct(max_ut+86400*14,tz = 'UTC',origin = '1970-01-01')),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
max_ut
as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01')
tmp <- data.frame(uni_time = c(as.POSIXct(max_ut+86400*7,tz = 'UTC',origin = '1970-01-01'),
as.POSIXct(max_ut+86400*14,tz = 'UTC',origin = '1970-01-01')),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
tmp
tmp <- data.frame(uni_time = c(max_ut+86400*7,max_ut+86400*14),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
tmp
max_ut
max_ut + 86400*7
tmp$uni_time[1]
View(df)
fit_mean <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)
fit_sd <- auto.arima(df$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_sd <- forecast.Arima(fit_sd,h = 2)
max_ut <- max(df$uni_time)
tmp <- data.frame(uni_time = c(max_ut+86400*7,max_ut+86400*14),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
pred_mean$mean[1:2]
pred_sd$mean[1:2]
df <- smp_aggra[[2]]
View(df)
fit_mean <- auto.arima(df$smp_mean,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_mean <- forecast.Arima(fit_mean,h = 2)
fit_sd <- auto.arima(df$smp_sd,D = 1,trace = F,
max.P = 0,max.Q = 0,max.p = 20,max.q = 20,
ic = 'aic')
pred_sd <- forecast.Arima(fit_sd,h = 2)
df$uni_time <- as.p(df$uni_time)
max_ut <- max(df$uni_time)
tmp <- data.frame(uni_time = c(max_ut+86400*7,max_ut+86400*14),
smp_mean = pred_mean$mean[1:2],
smp_sd = pred_sd$mean[1:2])
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/TC_koubei/gen_result_last_week.R')
source('D:/Git/jwLi/0419.R')
source('D:/Git/jwLi/0419.R')
source('D:/Git/jwLi/0419.R')
install.packages('xls')
install.packages('xlsx')
rm(list = ls())
source('D:/Git/R_Function/R_lib_custom.R')
rm(list = ls())
source('D:/Git/R_Function/R_custom_lib.R')
dir_data <- 'D:/Data/jr_0419'
rm(list = ls())
source('D:/Git/R_Function/R_custom_lib.R')
dir_data <- 'D:/Data/jr_0419'
tableA <- read.xlsx('2014-2017.xls');tableA <- tableA[,c(1,2)]
require('xlsx')
source('D:/Git/R_Function/R_custom_lib.R')
dir_data <- 'D:/Data/jr_0419'
tableA <- read.xlsx('2014-2017.xls');tableA <- tableA[,c(1,2)]
?read.xlsx
tableA <- read.xlsx('2014-2017.xls',sheetName = 'sheet1');tableA <- tableA[,c(1,2)]
tableA <- read.xlsx(file.path(dir_data,'2014-2017.xls'),sheetName = 'sheet1');tableA <- tableA[,c(1,2)]
tableA <- read.xlsx(file.path(dir_data,'2014-2017.xls'),sheetName = 'Sheet1');tableA <- tableA[,c(1,2)]
tableA <- read.xlsx(file.path(dir_data,'2014-2017.xls'),sheetName = 'Sheet1');tableA <- tableA[,c(1,2)]
View(tableA)
head(tableA)
tableB <- read.xlsx(file.path(dir_data,'APU 发动机合同清单.xls'),sheetName = 'Sheet1')
tableB <- read.xlsx(file.path(dir_data,'APU\\ 发动机合同清单.xls'),sheetName = 'Sheet1')
tableB <- read.xlsx(file.path(dir_data,'APU// 发动机合同清单.xls'),sheetName = 'Sheet1')
tableB <- read.xlsx(file.path('D:/Data/jr_0419/APU 发动机合同清单.xls'),sheetName = 'Sheet1')
tableB <- read.xlsx(file.path(dir_data,'APU 发动机合同清单.xls'),sheetName = '发动机')
tableB <- read.xlsx(file.path(dir_data,'APU 发动机合同清单.xls'),sheetName = '发动机')
tableB <- read.xlsx(file.path(dir_data,'APU 发动机合同清单.xls'),sheetIndex = 2)
View(tableB)
tableB <- read.xlsx(file.path(dir_data,'APU 发动机合同清单.xls'),sheetIndex = 2,encoding = 'GBK')
head(tableB)
tableB <- read.xlsx(file.path(dir_data,'APU 发动机合同清单.xls'),sheetIndex = 2,encoding = 'UTF-8')
head(tableB)
View(tableB)
tableB <- read.xlsx(file.path(dir_data,'APU 发动机合同清单.xls'),sheetIndex = 2,encoding = 'fileEncoding')
View(tableB)
head(tableB)
rm(list = ls())
Sys.setlocale("LC_ALL", 'en_US.UTF-8')
x <- Sys.setlocale("LC_ALL", 'en_US.UTF-8')
require('xlsx')
source('D:/Git/R_Function/R_custom_lib.R')
dir_data <- 'D:/Data/jr_0419'
tableA <- read.xlsx(file.path(dir_data,'2014-2017.xls'),sheetName = 'Sheet1');tableA <- tableA[,c(1,2)]
View(tableA)
source('D:/Git/jwLi/0419.R', encoding = 'UTF-8')
rm(list = ls())
source('D:/Git/R_Function/R_custom_lib.R')
dir_data <- 'D:/Data/jr_0419'
tableA <- read.csv(file.path(dir_data,'2014-2017.csv'))
tableA <- read.csv(file = file.path(dir_data,'2014-2017.csv'),skip = 1,header = F)
tableA <- read.csv(file = file.path(dir_data,'2014-2017.csv'),skip = 2,header = F)
tableA <- read.csv(file = file.path(dir_data,'2014-2017.csv'),skip = 2)
tableA <- read.table(file = file.path(dir_data,'2014-2017.csv'),skip = 2)
tableB <- read.csv(file.path(dir_data,'APU 发动机合同清单.csv'))
tableB <- read.csv(file.path(dir_data,'APU 发动机合同清单.csv'),skip = 1)
View(tableB)
head(tableB)
fix(tableB)
?fix
rm(list = ls())
Sys.setlocale(“LC_ALL”,”Chinese”)
Sys.setlocale("LC_ALL","Chinese")
source('D:/Git/R_Function/R_custom_lib.R')
dir_data <- 'D:/Data/jr_0419'
tableA <- read.table(file = file.path(dir_data,'2014-2017.csv'),skip = 2)
tableB <- read.csv(file.path(dir_data,'APU 发动机合同清单.csv'),skip = 1)
View(tableB)
source('D:/Git/Disk_Workload/Paper/inpaper/fraction.R')
rm(list = ls());source('~/rhead');setwd(file.path(dir_c,'Disk_Workload/Paper'));
source('D:/Git/Disk_Workload/Paper/inpaper/fraction.R')
p_frac_frA_grt
p_frac_frA_grt+geom_segment(aes(x=45,y=0,xend=45,yend=20))
p_frac_frA_grt+geom_segment(aes(x=45,y=0,xend=45,yend=15))
p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=22, y=10,label= paste(max(data_fr$percentage),'%',sep='')
,size=10)
p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=55, y=10,label= 'Critical RAT: 45%',size=10)
p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=25, y=10,label= 'Critical RAT: 45%',size=10)
save_fig(p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=25, y=10,label= 'Critical RAT: 45%',size=10),
'frac_fr50')
save_fig(p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=20, y=10,label= 'Critical RAT: 45%',size=10),
'frac_fr50')
save_fig(p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=22.5, y=10,label= 'Critical RAT: 45%',size=10),
'frac_fr50')
save_fig(p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=22.5, y=10,label= 'Critical RAT: 45%',size=10),
'frac_fr50')
save_fig(p_frac_frB_grt+
geom_segment(aes(x=30,y=0,xend=30,yend=15),size=0.5)+
annotate("text", x=17.5, y=10,label= 'Critical RAT: 30%',size=10),'frac_fr60')
save_fig(p_frac_frC_grt+
geom_segment(aes(x=20,y=0,xend=20,yend=15),size=0.5)+
annotate("text", x=7.5, y=10,label= 'Critical RAT: 20%',size=10),'frac_fr70')
save_fig(p_frac_frD_grt,+
geom_segment(aes(x=15,y=0,xend=15,yend=15),size=0.5)+
annotate("text", x=0, y=10,label= 'Critical RAT: 15%',size=10),'frac_fr80')
save_fig(p_frac_frD_grt+
geom_segment(aes(x=15,y=0,xend=15,yend=15),size=0.5)+
annotate("text", x=0, y=10,label= 'Critical RAT: 15%',size=10),'frac_fr80')
save_fig(p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=45, y=20,label= 'Critical RAT: 45%',size=10),
'frac_fr50')
save_fig(p_frac_frB_grt+
geom_segment(aes(x=30,y=0,xend=30,yend=15),size=0.5)+
annotate("text", x=30, y=20,label= 'Critical RAT: 30%',size=10),'frac_fr60')
save_fig(p_frac_frC_grt+
geom_segment(aes(x=20,y=0,xend=20,yend=15),size=0.5)+
annotate("text", x=20, y=20,label= 'Critical RAT: 20%',size=10),'frac_fr70')
save_fig(p_frac_frD_grt+
geom_segment(aes(x=15,y=0,xend=15,yend=15),size=0.5)+
annotate("text", x=15, y=20,label= 'Critical RAT: 15%',size=10),'frac_fr80')
save_fig(p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=45, y=17,label= 'Critical RAT: 45%',size=10),
'frac_fr50')
save_fig(p_frac_frA_grt+
geom_segment(aes(x=45,y=0,xend=45,yend=15),size=0.5)+
annotate("text", x=45, y=17,label= 'Critical RAT: 45%',size=10),'frac_fr50')
save_fig(p_frac_frB_grt+
geom_segment(aes(x=30,y=0,xend=30,yend=15),size=0.5)+
annotate("text", x=30, y=17,label= 'Critical RAT: 30%',size=10),'frac_fr60')
save_fig(p_frac_frC_grt+
geom_segment(aes(x=20,y=0,xend=20,yend=15),size=0.5)+
annotate("text", x=20, y=17,label= 'Critical RAT: 20%',size=10),'frac_fr70')
save_fig(p_frac_frD_grt+
geom_segment(aes(x=15,y=0,xend=15,yend=15),size=0.5)+
annotate("text", x=15, y=17,label= 'Critical RAT: 15%',size=10),'frac_fr80')
save_fig(p_frac_frD_grt+
geom_segment(aes(x=15,y=0,xend=15,yend=15),size=0.5)+
annotate("text", x=17, y=17,label= 'Critical RAT: 15%',size=10),'frac_fr80')
rm(list = ls());source('~/rhead');setwd(file.path(dir_c,'Disk_Workload/Paper'));
source('dir_func.R')
load(file.path(dir_data,'uniform_data.Rda'))
load(file.path(dir_data,'quantile_dutycycle.Rda'))
load(file.path(dir_data,'quantile_bandwidth.Rda'))
DT <- quantile_dutycycle
thresholds <- sort(c(5,15,seq(10,90,10)))
attr_main <- paste('T',thresholds,sep='')
attr <- paste('T',thresholds,sep='')
for(i in seq_len(length(thresholds))){
df_frac <- get_quan_percentage(DT,thresholds[i])
DT[[attr[i]]] <- df_frac$fraction[match(DT$svrid,df_frac$svrid)]*100
}
DT_quan_all <- gen_data(DT[,c('svrid','mean','sd',attr_main)],expand=T)
DT_quan_all <- subset(DT_quan_all,numD==12) # update 2018-01-04
system.time(r_all <- lapply(attr_main,function(at)gen_result_feature(DT=DT_quan_all,attr=at,attr_max=100,bins = 20)))
data_fr_list_all <- lapply(r_all,'[[',1)
p_fr_list_all <- lapply(r_all,'[[',2)
p_count_list_all <- lapply(r_all,'[[',3)
data_corr_all <- data.frame(thred = thresholds[-1],corr=sapply(r_all,'[[',4)[-1])
thredset <- thresholds
plist_thred <- lapply(thresholds,function(i){
p5 <- p_fr_list_all[[which(thresholds == i)]]+
xlab('RAT of Large Duty Cycle (%)')+coord_cartesian(ylim=c(0,35),xlim=c(0,105))+gen_theme(p=10)
p6 <- p_count_list_all[[which(thresholds == i)]]+coord_cartesian(xlim=c(0,105))
list[p1,p2,p3,p4] <- list(1,2,3,4)
list(p1,p2,p3,p4,p5,p6)
})
plist_thred_all <- lapply(plist_thred,'[[',5)
plist_thred_all_hist <- lapply(plist_thred,'[[',6)
list[p_frac_frA_grt,p_frac_frB_grt,p_frac_frC_grt,p_frac_frD_grt] <- plist_thred_all[which(thresholds %in% c(50,60,70,80))]
list[p_frac_frA_les,p_frac_frB_les,p_frac_frC_les,p_frac_frD_les] <- plist_thred_all[which(thresholds %in% c(5,10,15,20))]
x<-seq(0,1,0.0001)
qu <- 0.3
ytop<-dnorm(qu)
MyDF<-data.frame(x=x*100,y=dnorm(x,0,qu))
MyDF$y <- MyDF$y/sum(MyDF$y)
p<-qplot(x=MyDF$x,y=MyDF$y,geom="line")
shade1 <- rbind(c(25,0), subset(MyDF, x > 25))
shade2 <- rbind(c(50,0), subset(MyDF, x > 50))
shade3 <- rbind(c(75,0), subset(MyDF, x > 75))
d1 <- MyDF$y[MyDF$x==25];D1 <- sum(shade1$y)
d2 <- MyDF$y[MyDF$x==50];D2 <- sum(shade2$y)
d3 <- MyDF$y[MyDF$x==75];D3 <- sum(shade3$y)
p_frac_illu <- p + xlab('Duty Cycle (%)') +ylab('Probability Density')+
geom_polygon(data = shade1, aes(x, y),fill=colr1[3])+geom_polygon(data = shade2, aes(x, y),fill=colr1[2])+geom_polygon(data = shade3, aes(x, y),fill=colr1[4])+
geom_segment(aes(x=50,y=d1,xend=25,yend=d1))+annotate('text',x=35,y=d1+d1*.13,label=sprintf('Threhold=0.25\nRAT=%.3f',D1*100),size=8)+
geom_segment(aes(x=75,y=d2,xend=50,yend=d2))+annotate('text',x=60,y=d2+d1*.13,label=sprintf('Threhold=0.50\nRAT=%.3f',D2*100),size=8)+
geom_segment(aes(x=100,y=d3,xend=75,yend=d3))+annotate('text',x=85,y=d3+d1*.13,label=sprintf('Threhold=0.75\nRAT=%.3f',D3*100),size=8)+
gen_theme()+theme(axis.text.y=element_blank())
p_frac_illu
p_frac_illu <- p + xlab('Duty Cycle (%)') +ylab('Probability Density')+
geom_polygon(data = shade1, aes(x, y),fill=colr1[3])+geom_polygon(data = shade2, aes(x, y),fill=colr1[2])+geom_polygon(data = shade3, aes(x, y),fill=colr1[4])+
geom_segment(aes(x=50,y=d1,xend=25,yend=d1))+annotate('text',x=35,y=d1+d1*.13,label=sprintf('Threhold=0.25\nRAT=%.1f%%',D1*100),size=8)+
geom_segment(aes(x=75,y=d2,xend=50,yend=d2))+annotate('text',x=60,y=d2+d1*.13,label=sprintf('Threhold=0.50\nRAT=%.1f%%',D2*100),size=8)+
geom_segment(aes(x=100,y=d3,xend=75,yend=d3))+annotate('text',x=85,y=d3+d1*.13,label=sprintf('Threhold=0.75\nRAT=%.1f%%',D3*100),size=8)+
gen_theme()+theme(axis.text.y=element_blank())
p_frac_illu
save_fig(p_frac_illu,'frac_illu')
source('D:/Git/Disk_Workload/Paper/inpaper/average_random_strength.R')

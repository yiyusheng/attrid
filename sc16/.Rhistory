p4 <- ggplot(df,aes(x = time,y = iopsr)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p5 <- ggplot(df,aes(x = time,y = iopsw)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p6 <- ggplot(df,aes(x = time,y = sizer)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p7 <- ggplot(df,aes(x = time,y = sizew)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
png(filename = file.path(dir_figure,paste(gsub('\\.Rda','',fn),'-',df$svrid[1],'.png',sep='')),
width = 1920, height = 1080, bg = "white")
multiplot(p1,p2,p3,p4,p5,p6,p7,cols = 1)
display_svrid <- function(df){
df.fr <- factorX(subset(failRecord,svrid == fct2ori(df$svrid[1])))
p1 <- ggplot(df,aes(x = time,y = util)) + geom_line() + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3) + ggtitle(df$svrid[1])
p2 <- ggplot(df,aes(x = time,y = rps)) + geom_line() + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p3 <- ggplot(df,aes(x = time,y = wps)) + geom_line() + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p4 <- ggplot(df,aes(x = time,y = iopsr)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p5 <- ggplot(df,aes(x = time,y = iopsw)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p6 <- ggplot(df,aes(x = time,y = sizer)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
p7 <- ggplot(df,aes(x = time,y = sizew)) + geom_line()  + geom_vline(xintercept = as.numeric(df.fr$f_time),size = 1,color = 'red',linetype = 3)
png(filename = file.path(dir_figure,paste(gsub('\\.Rda','',fn),'-',df$svrid[1],'.png',sep='')),
width = 1920, height = 1080, bg = "white")
multiplot(p1,p2,p3,p4,p5,p6,p7,cols = 1)
dev.off()
}
lapply(splitDD[1],display_svrid)
source('~/Code/R/Disk_Workload_201406-201407/Plot_Figure/plot_svrid_attrid_2015.R')
fn <- 'd1.Rda'
cat(sprintf('[%s]file %s START!!!\n',date(),fn))
load(file.path(dir_data15DC,fn))
View(dt_dcast)
rm(list = ls());source('~/rhead')
rm(list = ls());source('~/rhead')
source('~/Code/R/Disk_Workload_201406-201407/Plot_Figure/plot_svrid_attrid_2015.R')
source('~/Code/R/Disk_Workload_201406-201407/Plot_Figure/plot_svrid_attrid_2015.R')
rm(list = ls());source('~/rhead')
duty_time_group <- function(i){
fn <- fname[i]
cat(sprintf('[%s]\tfile:%s\tSTART!!!\n',date(),fn))
load(file.path(dir_data14,fn))
dd <- DT
# dd <- subsetX(dd,svrid %in% levels(dd$svrid)[1:10])
dd <- remove_line_byvalue(dd[,c('svrid','time',attrName)])
dd$time <- as.Date(dd$time)
list[sta_util_svrid,sta_util_day] <- sta_attrid(dd,'util',fn)
list[sta_rps_svrid,sta_rps_day] <- sta_attrid(dd,'rps',fn)
list[sta_wps_svrid,sta_wps_day] <- sta_attrid(dd,'wps',fn)
sta_day <- list(sta_util_day,sta_rps_day,sta_wps_day)
sta_svrid <- list(sta_util_svrid,sta_rps_svrid,sta_wps_svrid)
cat(sprintf('[%s]\tfile:%s\tEND!!!\n',date(),fn))
list(sta_day,sta_svrid)
}
fname <- list.files(dir_data14)
cutList <- list(cut_util = sort(c(0,3,2^(0:6),95,101)))
idx <- seq_len(length(fname))
i = 20
fn <- fname[i]
cat(sprintf('[%s]\tfile:%s\tSTART!!!\n',date(),fn))
load(file.path(dir_data14,fn))
dd <- DT
dd1 <- dd[,1:5]
object.size(dd)
object.size(dd1)
summary(dd)
dir_data14
source('~/Code/R/Disk_Workload_201406-201407/base_var.R')
dir_data14
load(file.path(dir_data14,'data1.Rda'))
summary(dd$util)
summary(data$"uspop")
summary(data$util)
names(data)
summary(data$value)
a <- subset(data,value >= 0 & value <= 100)
nrow(data) - nrow(a)
load(file.path(dir_data14C,'data1.Rda'))
summary(DT$util)
View(dd1)
a <- subset(DT,is.na(util))
a <- factorX(a)
a1 <- melt(table(a$svrid))
View(a1)
ggplot(a1,aes(x = value)) + geom_histogram(binwidth = 100)
ggplot(a1,aes(x = value)) + geom_histogram(binwidth = 1000)
sum(a1$value < 1000)
ggplot(a1,aes(x = value)) + geom_histogram(binwidth = 100)
sum(a1$value < 300)
quantileX(a1$value)
rm(list = ls());source('~/rhead')
rm(list = ls());source('~/rhead')
sta_attrid <- function(dd,aid,fnm){
level_aid <- paste(aid,'_level',sep='')
cut_aid <- cutList[[paste('cut_',aid,sep='')]]
dd[[level_aid]] <- cut_level(dd[[aid]],cut_aid,F)
sta_aid_svrid <- as.data.frame(do.call(rbind,tapply(dd[[level_aid]],dd$svrid,table)))
sta_aid_svrid <- cbind(levels(dd$svrid),sta_aid_svrid)
names(sta_aid_svrid) <- c('svrid',paste('X',cut_aid[-length(cut_aid)],sep=''))
sta_aid_svrid$fn <- fnm
# dd$svridtime <- factor(paste(fct2ori(dd$svrid),dd$time,sep = '#'))
# sta_aid_day <- as.data.frame(do.call(rbind,tapply(dd[[level_aid]],dd$svridtime,table)))
# sta_aid_day <- cbind(levels(dd$svridtime),sta_aid_day)
# names(sta_aid_day) <- c('svriddate',paste('X',cut_aid[-length(cut_aid)],sep=''))
#
# tmp <- strsplit(fct2ori(sta_aid_day$svriddate),split = '#')
# sta_aid_day$svrid <- factor(sapply(tmp,'[[',1))
# sta_aid_day$time <- as.Date(sapply(tmp,'[[',2))
# sta_aid_day <- sta_aid_day[,c('svrid','time',paste('X',cut_aid[-length(cut_aid)],sep=''))]
# row.names(sta_aid_day) <- NULL
# sta_aid_day$fn <- fnm
sta_aid_day <- 0
list(sta_aid_svrid,sta_aid_day)
}
sta_cut <- function(i){
fn <- fname[i]
cat(sprintf('[%s]\tfile:%s\tSTART!!!\n',date(),fn))
load(file.path(dir_dataset,fn))
dd <- dt_dcast
# dd <- subsetX(dd,svrid %in% levels(dd$svrid)[1:10])
dd <- filter_badiops_NA(dd,attrName,fn)
dd$time <- as.Date(dd$time)
dd$sizer <- dd$rps/dd$iopsr;dd$sizer[is.na(dd$sizer) | is.infinite(dd$sizer)] <- 0
dd$sizew <- dd$wps/dd$iopsw;dd$sizew[is.na(dd$sizew) | is.infinite(dd$sizew)] <- 0
list[sta_util_svrid,sta_util_day] <- sta_attrid(dd,'util',fn)
list[sta_rps_svrid,sta_rps_day] <- sta_attrid(dd,'rps',fn)
list[sta_iopsr_svrid,sta_iopsr_day] <- sta_attrid(dd,'iopsr',fn)
list[sta_wps_svrid,sta_wps_day] <- sta_attrid(dd,'wps',fn)
list[sta_iopsw_svrid,sta_iopsw_day] <- sta_attrid(dd,'iopsw',fn)
list[sta_sizer_svrid,sta_sizer_day] <- sta_attrid(dd,'sizer',fn)
list[sta_sizew_svrid,sta_sizew_day] <- sta_attrid(dd,'sizew',fn)
sta_day <- list(sta_util_day,sta_rps_day,sta_iopsr_day,sta_wps_day,sta_iopsw_day,sta_sizer_day,sta_sizew_day)
sta_svrid <- list(sta_util_svrid,sta_rps_svrid,sta_iopsr_svrid,sta_wps_svrid,sta_iopsw_svrid,sta_sizer_svrid,sta_sizew_svrid)
cat(sprintf('[%s]\tfile:%s\tEND!!!\n',date(),fn))
list(sta_day,sta_svrid)
}
load(file.path(dir_data,'sta_dcastClear.Rda'))
dir_dataset <- dir_data15DC
fname <- list.files(dir_dataset)
attrName <- attrNameAll
fname <- 'd1.Rda'
cat(sprintf('[%s]\tfile:%s\tSTART!!!\n',date(),fn))
load(file.path(dir_dataset,fn))
fn <- 'd1.Rda'
cat(sprintf('[%s]\tfile:%s\tSTART!!!\n',date(),fn))
load(file.path(dir_dataset,fn))
View(r_sta_svrid)
View(r_sta_day)
r1 <- subsetX(r_sta_svrid,fn == 'd1.Rda')
r2 <- subsetX(r_sta_day,fn == 'd1.Rda')
View(r1)
a <- subset(dt_dcast,util == 0)
dd15dc <- dd_dcast
dd15dc <- dt_dcast
load(file.path(dir_data15D,'d1.Rda'))
b <- subset(dt_dcast,util == 0)
dd15d <- dt_dcast
load(file.path(dir_data15,'d1.Rda'))
dd15 <- data
c <- subset(dd15,attrid == 999)
c1 <- subset(c,value == 0)
c2 <- melt_table(c$svr_id,c$date)
View(c2)
mean(c2$value)
load(file.path(dir_data14,'data1.Rda'))
dd14 <- data
names(dd14) <- c('svrid','time','timestamp','rps','wps','util')
d <- subset(dd14,util == 0)
quantileX(d$rps)
quantileX(d$wps)
View(r_sta_svrid)
quantileX(r_sta_svrid$zero_util)
sum(r_sta_svrid$zero_util)/sum(r_sta_svrid$count)
rm(list = ls());source('~/rhead');require(plyr)
gen_util_sta <- function(df){
tmp_count <- tapply(df$util,df$tag,length);tmp_count[is.na(tmp_count)] <- 0;names(tmp_count) <- paste('count',1:4,sep='')
tmp_sum <- tapply(df$util,df$tag,sum);tmp_sum[is.na(tmp_sum)] <- 0;names(tmp_sum) <- paste('sum',1:4,sep='')
r <- data.frame(svrid = df$svrid[1],
util_count = nrow(df),t(tmp_count),
util_sum = sum(df$util)/100,t(tmp_sum)/100)
}
duty_time_group <- function(i){
fn <- fname[i]
cat(sprintf('[%s]\tfile:%s\tSTART!!!\n',date(),fn))
load(file.path(dir_dataset,fn))
dd <- DT
dd$time <- as.Date(dd$time)
tagSet <- c('idle','busy1','busy2','busy3')
dd$tag <- tagSet[1]
dd$tag[dd$rps > 0 & dd$wps <= 64] <- tagSet[2]
dd$tag[dd$rps == 0 & dd$wps > 64] <- tagSet[3]
dd$tag[dd$rps > 0 & dd$wps > 64] <- tagSet[4]
dd$tag <- factor(dd$tag,levels = tagSet)
splitDD <- split(dd,dd$svrid)
r <- lapplyX(splitDD,gen_util_sta)
row.names(r) <- NULL
r
# sta_svrid <- list2df(tapply(dd$tag,dd$svrid,table),n = tagSet)
# sta_day <- lapplyX(splitDD,function(df){
#   r <- list2df(tapply(df$tag,df$time,table),n = c(tagSet,'time'))
#   r$svrid <- df$svrid[1]
#   r})
# row.names(sta_day) <- NULL
# sta_day <- sta_day[,c('svrid','time',tagSet)]
cat(sprintf('[%s]\tfile:%s\tEND!!!\n',date(),fn))
list(r)
}
dir_dataset <- dir_data14C
fname <- list.files(dir_dataset)
cutList <- list(cut_util = sort(c(0,3,2^(0:6),95,101)))
idx <- seq_len(length(fname))
fn <- 'data27.Rda'
cat(sprintf('[%s]\tfile:%s\tSTART!!!\n',date(),fn))
load(file.path(dir_dataset,fn))
dd <- DT
dd$time <- as.Date(dd$time)
tagSet <- c('idle','busy1','busy2','busy3')
dd$tag <- tagSet[1]
dd$tag[dd$rps > 0 & dd$wps <= 64] <- tagSet[2]
dd$tag[dd$rps == 0 & dd$wps > 64] <- tagSet[3]
dd$tag[dd$rps > 0 & dd$wps > 64] <- tagSet[4]
dd$tag <- factor(dd$tag,levels = tagSet)
splitDD <- split(dd,dd$svrid)
r <- lapplyX(splitDD,gen_util_sta)
row.names(r) <- NULL
View(r)
source('~/Code/R/Disk_Workload_201406-201407/IO_statistic_2014/sta_cut.R')
rm(list = ls());source('~/rhead')
load(file.path(dir_data,'duty_time_group.Rda'))
dts <- duty_time_svrid
dts$count_busy <- with(dts,count2 + count3 + count4)
dts$sum_busy <- with(dts,sum2 + sum3 + sum4)
dts <- dts[,c('svrid','util_count','util_sum','count1','count_busy','sum1','sum_busy')]
names(dts) <- c('svrid','util_count','util_sum','count_idle','count_busy','sum_idle','sum_busy')
dts$util_rate <- with(dts,roundX(util_sum/util_count))
dts$idle_rate <- with(dts,roundX(sum_idle/count_idle))
dts$busy_rate <- with(dts,roundX(sum_busy/count_busy))
dts <- replace_value(dts)
p1 <- ggplot(dts,aes(x = log2(util_rate))) + geom_histogram(binwidth = 0.01)
p2 <- ggplot(dts,aes(x = log2(idle_rate))) + geom_histogram(binwidth = 0.01)
p3 <- ggplot(dts,aes(x = log2(busy_rate))) + geom_histogram(binwidth = 0.01)
multiplot(p1,p2,p3,cols = 1)
View(dts)
View(dts)
ggplot(dts,aes(x = idle_rate,y = busy_rate)) + geom_point(alpha = 0.01) + geom_abline(slope = 1,intercept = 0)
ggplot(dts,aes(x = util_rate,y = busy_rate)) + geom_point(alpha = 0.001)
ggplot(dts,aes(x = idle_rate,y = busy_rate)) + geom_point(alpha = 0.001)
ggplot(dts,aes(x = idle_rate,y = busy_rate)) + geom_point(alpha = 0.01)
dts$idle_total_rate <- with(dts,roundX(sum_idle/util_count))
dts$busy_total_rate <- with(dts,roundX(sum_busy/util_coutn))
dts$idle_total_rate <- with(dts,roundX(sum_idle/util_count))
dts$busy_total_rate <- with(dts,roundX(sum_busy/util_count))
dts <- replace_value(dts)
View(dts)
dts_f1 <- dts[,c('svrid','util_rate','busy_total_rate')]
View(dts_f1)
dts_f1$frac_busy <- with(dts_f1,busy_total_rate/util_rate)
dts_f1 <- replace_value(dts_f1)
ggplot(dts_f1,aes(x = util_rate,y = frac_busy)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha = 0.01, width = 0.2)
ggplot(dts_f1,aes(x = factor(round(util_rate,0.01)),y = frac_busy)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha = 0.01, width = 0.2)
ggplot(dts_f1,aes(x = factor(round(util_rate,2)),y = frac_busy)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha = 0.01, width = 0.2)
ggplot(dts_f1,aes(x = factor(round(util_rate,2)))) +
geom_boxplot(aes(y = frac_busy),outlier.shape = NA) +
geom_jitter(aes(y = frac_busy),alpha = 0.01, width = 0.2) +
geom_histogram(binwidth = 0.01)
ggplot(dts_f1) +
geom_boxplot(aes(x = factor(round(util_rate,2)),y = frac_busy),outlier.shape = NA) +
geom_jitter(aes(x = factor(round(util_rate,2)),y = frac_busy),alpha = 0.01, width = 0.2) +
geom_histogram(aes(x = util_rate),binwidth = 0.01)
ggplot(dts_f1) +
geom_boxplot(aes(x = factor(round(util_rate,2)),y = frac_busy),outlier.shape = NA) +
geom_jitter(aes(x = factor(round(util_rate,2)),y = frac_busy),alpha = 0.01, width = 0.2)
ggplot(dts_f1) +
geom_boxplot(aes(x = factor(round(util_rate,1)),y = frac_busy),outlier.shape = NA) +
geom_jitter(aes(x = factor(round(util_rate,1)),y = frac_busy),alpha = 0.01, width = 0.2)
quantileX(dts_f1$busy_total_rate)
quantileX(dts_f1$frac_busy)
quantileX(dts_f1$util_rate)
ggplot(dts_f1,aes(util_rate)) + geom_histogram(binwidth = 0.01)
multiplot(p1,p2,p3,cols = 1)
a <- table(log2(dts$idle_rate))
a <- melt(table(round(log2(dts$idle_rate),2)))
View(a)
2^(c(-5.64,-6.64,-5.06))
quantile(dts$idle_rate)
quantileX(dts$idle_rate)
quantileX(dts$idle_rate[dts$idle_rate != 0])
2^-5
p1 <- ggplot(dts,aes(x = log2(util_rate))) + geom_histogram(binwidth = 0.01)
p2 <- ggplot(dts,aes(x = log2(idle_rate))) + geom_histogram(binwidth = 0.01)
p3 <- ggplot(dts,aes(x = log2(busy_rate))) + geom_histogram(binwidth = 0.01)
p4 <- ggplot(dts,aes(x = log2(idle_total_rate))) + geom_histogram(binwidth = 0.01)
p5 <- ggplot(dts,aes(x = log2(busy_total_rate))) + geom_histogram(binwidth = 0.01)
multiplot(p1,p2,p3,p4,p5,cols = 1)
with(dts,all(util_rate == idle_total_rate + busy_total_rate))
a <- subset(dts,util_rate != idle_total_rate + busy_total_rate)
View(a)
p1
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
View(dts_c1)
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
summary(dts_c1)
dts_c1 <- replace_value(dts_c1,v1 = Inf,v2 = -20)
summary(dts_c1)
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
df <- dts_c1
v1 = Inf
v2 = -20
is.infinite(v1)
is.null(v1)
dts_c1 <- replace_value(dts_c1,v1 = Inf,v2 = -20)
summary(dts_c1)
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
df[is.infinite(v1)]
is.infinite(v1)
source('~/Code/R/R_libs_user/R_custom_lib.R')
dts_c1 <- replace_value(dts_c1,v1 = Inf,v2 = -20)
is.infinite(df)
df <- dts_c1
is.infinite(df)
is.null(df)
is.na(df)
?is.infinite
is.infinite(df[,1])
apply(df,2,is.infinite)
source('~/Code/R/R_libs_user/R_custom_lib.R')
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
dts_c1 <- replace_value(dts_c1,v1 = Inf,v2 = -20)
summary(dts_c1)
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
df <- df <- dts_c1
v1
v2
is.infinite(v1)
a <- apply(df,2,is.infinite)
dim(a)
df[apply(df,2,is.infinite)] <- v2
summary(df)
df1 <- df
df <- subset(df1,is.infinite(util_rate_level))
apply(df[1:10,],2,is.infinite)
head(df)
is.infinite(df[,5])
a <- apply(df[,4:5],2,is.infinite)
head(a)
b <- is.na(df)
head(b)
df[apply(df,2,is.infinite)] <- v2
a <- apply(df,2,is.infinite)
dim(a)
dim9B
dim(b)
class(a);class(b)
source('~/Code/R/R_libs_user/R_custom_lib.R')
View(df)
df2 <- df
df <- df2[1:10,]
df
apply(df,2,is.infinite)
is.infinite(df[,1])
is.infinite(df[,2])
is.infinite(df[,3])
is.infinite(df[,4])
is.infinite(df[,5])
apply(df,2,is.infinite)
apply(df,1,is.infinite)
apply(df,2,is.infinite)
is.infinite(df$util_rate_level)
x <- df[,5]
is.infinite(x)
df[apply(df,2,function(x)is.infinite(x))] <- v2
df
df[apply(df,2,function(x)is.infinite(as.numeric(x)))] <- v2
df[,5] <- Inf
df[apply(df,2,function(x)is.infinite(as.vector(x)))] <- v2
as.numeric
df[apply(df,2,function(x)is.infinite(as.numeric(x)))] <- v2
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
dts_c1 <- replace_value(dts_c1,v1 = Inf,v2 = -20)
summary(dts_c1)
source('~/Code/R/R_libs_user/R_custom_lib.R')
dts_c1 <- replace_value(dts_c1,v1 = Inf,v2 = -20)
df <- dts_c1
v1
v2
if(is.na(v1)){
df[is.na(df)] <- v2
}else if(is.null(v1)){
df[apply(df,2,function(x)is.null(as.numeric(x)))] <- v2
}else if(is.infinite(v1)){
df[apply(df,2,function(x)is.infinite(as.numeric(x)))] <- v2
}else if(is.nan(v1)){
df[apply(df,2,function(x)is.nan(as.numeric(x)))] <- v2
}else{
df[df == v1] <- v2
}
is.infinite(v1)
a <- apply(df,2,function(x)is.infinite(as.numeric(x)))
is.na(a)
which(is.na(a) == NA)
a <- as.numeric(df[,1])
a <- as.numeric(df[,2])
a <- as.numeric(df[,3])
a <- as.numeric(df[,4])
a <- as.numeric(df[,5])
a <- as.numeric(df)
class(df)
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
df <- subset(dts_c1,is.infinite(busy_rate_level))
df <- subset(dts_c1,is.infinite(util_rate_level))
df[apply(df,2,function(x)is.infinite(as.numeric(x)))] <- v2
summary(df)
df <- df2
a <- apply(df,2,function(x)is.infinite(as.numeric(x)))
a <- apply(df,2,function(x)as.numeric(x))
a <- apply(df,2,as.numeric)
summary9a
summary9a
summary(a)
a <- apply(df,2,class)
a
a <- apply(df,2,length)
a <- apply(df,2,function(x)x[1])
a
a <- apply(df,2,function(x)sum(x[1:10]))
a <- apply(df[,2:5],2,function(x)sum(x[1:10]))
a
df <- data.frame(a1 = 1:5,a2 = letter[1:5])
df <- data.frame(a1 = 1:5,a2 = letters[1:5])
View(df)
apply(df,2,function(x)x)
apply(df,2,function(x)sum(x))
apply(df,2,class)
list(df$a1)
df <- data.frame(a1 = 1:5,a2 = rnorm(5),a3 = letters[1:5])
apply(df,2,function(x)x)
apply(df,2,class)
apply(df[,1:2],2,sum)
apply(df,1,function(x)x)
apply(df,1,class)
df
apply(df,2,function(x)x)
apply(df,2,class)
apply(df[,1:2],2,sum)
apply(df,1,function(x)x)
apply(df,1,class)
df <- data.frame(a1 = 1:5,a2 = rnorm(5))
apply(df,2,function(x)x)
dts_c1[,1:4] <- replace_value(dts_c1[,1:4],v1 = Inf,v2 = -20)
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
dts_c1[,2:5] <- replace_value(dts_c1[,2:5],v1 = Inf,v2 = -20)
summary(dts_c1)
a <- melt(table(round(dts_c1$util_rate_level)))
View(a)
dts_c1 <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_c1$util_rate_level <- log2(dts_c1$util_rate)
dts_c1[,2:5] <- replace_value(dts_c1[,2:5],v1 = Inf,v2 = -14)
a <- melt(table(round(dts_c1$util_rate_level)))
cut_util_rate <- c(0,2^(-14:0))
cut_util_rate <- c(0,2^(seq(-14,0,-2)))
seq(1,4,1)
cut_util_rate <- c(0,2^(seq(-14,0,2)))
cut_util_rate
dts_c1$cut_ur <- cut(dts_c1$util_rate_level,cut_util_rate,cut_util_rate[-length(cut_util_rate)])
View(dts_c1)
table(dts_c1$cut_ur)
?cut
cut_util_rate
summary(dts_c1$util_rate_level)
cut_util_rate <- seq(-14,0,2)
dts_c1$cut_ur <- cut(dts_c1$util_rate_level,cut_util_rate,cut_util_rate[-length(cut_util_rate)])
table(dts_c1$cut_ur)
dts_c1$cut_ur <- cut(dts_c1$util_rate_level,cut_util_rate,cut_util_rate[-length(cut_util_rate)],right = F)
table(dts_c1$cut_ur)
cut_util_rate <- seq(-14,1,2)
cut_util_rate
cut_util_rate <- c(seq(-14,-2,2),1)
dts_c1$cut_ur <- cut(dts_c1$util_rate_level,cut_util_rate,cut_util_rate[-length(cut_util_rate)],right = F)
dts_c1$cut_ur <- cut(dts_c1$util_rate_level,cut_util_rate,cut_util_rate[-length(cut_util_rate)],right = F)
table(dts_c1$cut_ur)
cut_util_rate <- c(seq(-16,-4,4),1)
dts_c1$cut_ur <- cut(dts_c1$util_rate_level,cut_util_rate,cut_util_rate[-length(cut_util_rate)],right = F)
table(dts_c1$cut_ur)
View(dts_c1)
dts_classify_util_rate <- dts[,c('svrid','util_rate','idle_rate','busy_rate')]
dts_classify_util_rate$util_rate_level <- log2(dts_classify_util_rate$util_rate)
dts_classify_util_rate[,2:5] <- replace_value(dts_classify_util_rate[,2:5],v1 = Inf,v2 = -14)
cut_util_rate <- c(seq(-14,-2,2),1)
dts_classify_util_rate$cut_ur <- cut(dts_classify_util_rate$util_rate_level,cut_util_rate,cut_util_rate[-length(cut_util_rate)],right = F)
save(dts_classify_util_rate,file = file.path(dir_data,'dts_classify_util_rate.Rda'))
source('~/Code/R/Disk_Workload_201406-201407/duty_time/failure_rate.R')
View(dts_classify_util_rate)
load(file.path(dir_data,'sta_cut14DC.Rda'))
load(file.path(dir_data,'sta_count14.Rda'))
View(r_sta_svrid)
quantile(r_sta_svrid$count)
quantileX(r_sta_svrid$count)
288*7
17280-2016
dts_classify_util_rate <- subsetX(dts_classify_util_rate,svrid %in% r_sta_svrid$svrid[r_sta_svrid$count > (17280-288*7)])
rm(list = ls());source('~/rhead')
source(file.path(dir_code,'attr_function.R'))
source('attr_function.R')
rm(list = ls());setwd('~/Code/R/Disk_Workload_201406-201407/sc16/');source('~/rhead')
source('attr_function.R')
source('sc16F1Func.R')
list[tmp.fC,tmp.cmdbC,tmp.fTS,tmp.cmdbTS] <- dataLoadF1('dataPrepareAFR13.Rda')
tmp.fC <- factorX(tmp.fC)
tmp.fTS <- factorX(tmp.fTS)
